; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\gui_x_freertos.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\gui_x_freertos.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\RTOS\Template -I..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Device\ST\STM32F2xx\Include -I..\FatFS\src -I..\FreeRTOS\include -I..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\User -I..\User\bsp -I..\User\emWinTask -I..\STemWin\Config -I..\STemWin\DisplayDriver -I..\STemWin\inc -I..\STemWin\OS -IH:\BluetoothSoundBox\Project_BtSB\SZ_VIPIN_BTSB_Project\Project\RTE -IC:\Keil_v521a\ARM\PACK\Keil\STM32F2xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32F2xx\Include -IC:\Keil_v521a\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DSTM32F205xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\gui_x_freertos.crf ..\STemWin\OS\GUI_X_FreeRTOS.c]
                          THUMB

                          AREA ||i.GUI_X_Delay||, CODE, READONLY, ALIGN=1

                  GUI_X_Delay PROC
;;;86     
;;;87     void GUI_X_Delay(int ms)
000000  b510              PUSH     {r4,lr}
;;;88     {
000002  4604              MOV      r4,r0
;;;89       vTaskDelay( ms );
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       vTaskDelay
;;;90     }
00000a  bd10              POP      {r4,pc}
;;;91     
                          ENDP


                          AREA ||i.GUI_X_ErrorOut||, CODE, READONLY, ALIGN=1

                  GUI_X_ErrorOut PROC
;;;196    void GUI_X_Warn (const char *s) { }
;;;197    void GUI_X_ErrorOut(const char *s) { }
000000  4770              BX       lr
;;;198    
                          ENDP


                          AREA ||i.GUI_X_ExecIdle||, CODE, READONLY, ALIGN=1

                  GUI_X_ExecIdle PROC
;;;113    
;;;114    void GUI_X_ExecIdle(void) 
000000  b510              PUSH     {r4,lr}
;;;115    {
;;;116      vTaskDelay(30/portTICK_RATE_MS);
000002  201e              MOVS     r0,#0x1e
000004  f7fffffe          BL       vTaskDelay
;;;117    }
000008  bd10              POP      {r4,pc}
;;;118    
                          ENDP


                          AREA ||i.GUI_X_GetTaskId||, CODE, READONLY, ALIGN=1

                  GUI_X_GetTaskId PROC
;;;164    /* Get Task handle */
;;;165    U32 GUI_X_GetTaskId(void) 
000000  b510              PUSH     {r4,lr}
;;;166    { 
;;;167      return ((U32) xTaskGetCurrentTaskHandle());
000002  f7fffffe          BL       xTaskGetCurrentTaskHandle
;;;168    }
000006  bd10              POP      {r4,pc}
;;;169    
                          ENDP


                          AREA ||i.GUI_X_GetTime||, CODE, READONLY, ALIGN=1

                  GUI_X_GetTime PROC
;;;81     
;;;82     int GUI_X_GetTime(void)
000000  b510              PUSH     {r4,lr}
;;;83     {
;;;84       return ((int) xTaskGetTickCount());
000002  f7fffffe          BL       xTaskGetTickCount
;;;85     }
000006  bd10              POP      {r4,pc}
;;;86     
                          ENDP


                          AREA ||i.GUI_X_Init||, CODE, READONLY, ALIGN=1

                  GUI_X_Init PROC
;;;101    
;;;102    void GUI_X_Init(void) {
000000  4770              BX       lr
;;;103    }
;;;104    
                          ENDP


                          AREA ||i.GUI_X_InitOS||, CODE, READONLY, ALIGN=2

                  GUI_X_InitOS PROC
;;;137    /* Init OS */
;;;138    void GUI_X_InitOS(void)
000000  b510              PUSH     {r4,lr}
;;;139    { 
;;;140      /* Create Mutex lock */
;;;141      xQueueMutex = xSemaphoreCreateMutex();
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       xQueueCreateMutex
000008  491b              LDR      r1,|L7.120|
00000a  6008              STR      r0,[r1,#0]  ; xQueueMutex
;;;142      configASSERT (xQueueMutex != NULL);
00000c  4608              MOV      r0,r1
00000e  6800              LDR      r0,[r0,#0]  ; xQueueMutex
000010  b108              CBZ      r0,|L7.22|
000012  2001              MOVS     r0,#1
000014  e000              B        |L7.24|
                  |L7.22|
000016  2000              MOVS     r0,#0
                  |L7.24|
000018  b950              CBNZ     r0,|L7.48|
00001a  bf00              NOP      
00001c  2010              MOVS     r0,#0x10
00001e  f3808811          MSR      BASEPRI,r0
000022  f3bf8f4f          DSB      
000026  f3bf8f6f          ISB      
00002a  bf00              NOP      
00002c  bf00              NOP      
                  |L7.46|
00002e  e7fe              B        |L7.46|
                  |L7.48|
;;;143      
;;;144      /* Queue Semaphore */ 
;;;145      vSemaphoreCreateBinary( xSemaTxDone );
000030  2203              MOVS     r2,#3
000032  2100              MOVS     r1,#0
000034  2001              MOVS     r0,#1
000036  f7fffffe          BL       xQueueGenericCreate
00003a  4910              LDR      r1,|L7.124|
00003c  6008              STR      r0,[r1,#0]  ; xSemaTxDone
00003e  4608              MOV      r0,r1
000040  6800              LDR      r0,[r0,#0]  ; xSemaTxDone
000042  b130              CBZ      r0,|L7.82|
000044  2300              MOVS     r3,#0
000046  461a              MOV      r2,r3
000048  4619              MOV      r1,r3
00004a  480c              LDR      r0,|L7.124|
00004c  6800              LDR      r0,[r0,#0]  ; xSemaTxDone
00004e  f7fffffe          BL       xQueueGenericSend
                  |L7.82|
;;;146      configASSERT ( xSemaTxDone != NULL );
000052  480a              LDR      r0,|L7.124|
000054  6800              LDR      r0,[r0,#0]  ; xSemaTxDone
000056  b108              CBZ      r0,|L7.92|
000058  2001              MOVS     r0,#1
00005a  e000              B        |L7.94|
                  |L7.92|
00005c  2000              MOVS     r0,#0
                  |L7.94|
00005e  b950              CBNZ     r0,|L7.118|
000060  bf00              NOP      
000062  2010              MOVS     r0,#0x10
000064  f3808811          MSR      BASEPRI,r0
000068  f3bf8f4f          DSB      
00006c  f3bf8f6f          ISB      
000070  bf00              NOP      
000072  bf00              NOP      
                  |L7.116|
000074  e7fe              B        |L7.116|
                  |L7.118|
;;;147    }
000076  bd10              POP      {r4,pc}
;;;148    
                          ENDP

                  |L7.120|
                          DCD      xQueueMutex
                  |L7.124|
                          DCD      xSemaTxDone

                          AREA ||i.GUI_X_Lock||, CODE, READONLY, ALIGN=2

                  GUI_X_Lock PROC
;;;153    
;;;154    void GUI_X_Lock(void)
000000  b510              PUSH     {r4,lr}
;;;155    {
;;;156      if(xQueueMutex == NULL)
000002  4806              LDR      r0,|L8.28|
000004  6800              LDR      r0,[r0,#0]  ; xQueueMutex
000006  b908              CBNZ     r0,|L8.12|
;;;157      {
;;;158        GUI_X_InitOS();
000008  f7fffffe          BL       GUI_X_InitOS
                  |L8.12|
;;;159      }
;;;160      
;;;161      xSemaphoreTake( xQueueMutex, portMAX_DELAY );
00000c  2300              MOVS     r3,#0
00000e  1e5a              SUBS     r2,r3,#1
000010  4619              MOV      r1,r3
000012  4802              LDR      r0,|L8.28|
000014  6800              LDR      r0,[r0,#0]  ; xQueueMutex
000016  f7fffffe          BL       xQueueGenericReceive
;;;162    }
00001a  bd10              POP      {r4,pc}
;;;163    
                          ENDP

                  |L8.28|
                          DCD      xQueueMutex

                          AREA ||i.GUI_X_Log||, CODE, READONLY, ALIGN=1

                  GUI_X_Log PROC
;;;194    
;;;195    void GUI_X_Log (const char *s) { }
000000  4770              BX       lr
;;;196    void GUI_X_Warn (const char *s) { }
                          ENDP


                          AREA ||i.GUI_X_SignalEvent||, CODE, READONLY, ALIGN=2

                  GUI_X_SignalEvent PROC
;;;175    
;;;176    void GUI_X_SignalEvent (void) 
000000  b510              PUSH     {r4,lr}
;;;177    {
;;;178      xSemaphoreGive( xSemaTxDone );
000002  2300              MOVS     r3,#0
000004  461a              MOV      r2,r3
000006  4619              MOV      r1,r3
000008  4802              LDR      r0,|L10.20|
00000a  6800              LDR      r0,[r0,#0]  ; xSemaTxDone
00000c  f7fffffe          BL       xQueueGenericSend
;;;179    }
000010  bd10              POP      {r4,pc}
;;;180    
                          ENDP

000012  0000              DCW      0x0000
                  |L10.20|
                          DCD      xSemaTxDone

                          AREA ||i.GUI_X_Unlock||, CODE, READONLY, ALIGN=2

                  GUI_X_Unlock PROC
;;;148    
;;;149    void GUI_X_Unlock(void)
000000  b510              PUSH     {r4,lr}
;;;150    { 
;;;151      xSemaphoreGive( xQueueMutex ); 
000002  2300              MOVS     r3,#0
000004  461a              MOV      r2,r3
000006  4619              MOV      r1,r3
000008  4802              LDR      r0,|L11.20|
00000a  6800              LDR      r0,[r0,#0]  ; xQueueMutex
00000c  f7fffffe          BL       xQueueGenericSend
;;;152    }
000010  bd10              POP      {r4,pc}
;;;153    
                          ENDP

000012  0000              DCW      0x0000
                  |L11.20|
                          DCD      xQueueMutex

                          AREA ||i.GUI_X_WaitEvent||, CODE, READONLY, ALIGN=2

                  GUI_X_WaitEvent PROC
;;;169    
;;;170    void GUI_X_WaitEvent (void) 
000000  b510              PUSH     {r4,lr}
;;;171    {
;;;172      while( xSemaphoreTake(xSemaTxDone, portMAX_DELAY ) != pdTRUE );
000002  bf00              NOP      
                  |L12.4|
000004  2300              MOVS     r3,#0
000006  1e5a              SUBS     r2,r3,#1
000008  4619              MOV      r1,r3
00000a  4803              LDR      r0,|L12.24|
00000c  6800              LDR      r0,[r0,#0]  ; xSemaTxDone
00000e  f7fffffe          BL       xQueueGenericReceive
000012  2801              CMP      r0,#1
000014  d1f6              BNE      |L12.4|
;;;173    }
000016  bd10              POP      {r4,pc}
;;;174    
                          ENDP

                  |L12.24|
                          DCD      xSemaTxDone

                          AREA ||i.GUI_X_Warn||, CODE, READONLY, ALIGN=1

                  GUI_X_Warn PROC
;;;195    void GUI_X_Log (const char *s) { }
;;;196    void GUI_X_Warn (const char *s) { }
000000  4770              BX       lr
;;;197    void GUI_X_ErrorOut(const char *s) { }
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  xQueueMutex
                          DCD      0x00000000
                  xSemaTxDone
                          DCD      0x00000000
