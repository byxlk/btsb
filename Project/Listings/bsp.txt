; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\bsp.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\User -I..\User\bsp -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\RTOS\Template -I..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Device\ST\STM32F2xx\Include -I..\FreeRTOS\include -I..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\FatFS\src -IH:\BluetoothSoundBox\Project_BtSB\SZ_VIPIN_BTSB_Project\Project\RTE -IC:\Keil_v521a\ARM\PACK\Keil\STM32F2xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32F2xx\Include -IC:\Keil_v521a\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DSTM32F205xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\bsp.crf ..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=1

                  bsp_Init PROC
;;;14     */
;;;15     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;16     {
;;;17     	/*
;;;18     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;19     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;20     
;;;21     		系统时钟缺省配置为72MHz，如果需要更改，可以修改 system_stm32f10x.c 文件
;;;22     	*/
;;;23     	
;;;24     	/* 使能CRC校验, 用于开启STemWin的使用 */
;;;25     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_CRC, ENABLE);
000002  2101              MOVS     r1,#1
000004  0308              LSLS     r0,r1,#12
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;26     	
;;;27     	/* 优先级分组设置为4，可配置0-15级抢占式优先级，0级子优先级，即不存在子优先级。*/
;;;28     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
00000a  f44f7040          MOV      r0,#0x300
00000e  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;29     
;;;30     	bsp_InitDWT();       /* 初始DWT */
000012  f7fffffe          BL       bsp_InitDWT
;;;31     	bsp_InitUart(); 	 /* 初始化串口 */
000016  f7fffffe          BL       bsp_InitUart
;;;32     	//bsp_InitLed(); 		 /* 初始LED指示灯端口 */
;;;33     	//bsp_InitKey();		 /* 初始化按键 */
;;;34     	
;;;35     	//bsp_InitI2C();       /* 配置I2C总线 */
;;;36     	
;;;37     	//bsp_InitSPIBus();	 /* 配置SPI总线 */
;;;38     	
;;;39     	//bsp_InitExtSRAM();   /* 初始DWT */
;;;40     	LCD_InitHard();	     /* 初始化显示器硬件(配置GPIO和FSMC,给LCD发送初始化指令) */
00001a  f7fffffe          BL       LCD_InitHard
;;;41     	//TOUCH_InitHard();    /* 初始化触摸 */
;;;42     	
;;;43     	/* 挂载文件系统 */
;;;44     	//result = f_mount(&fs, "0:/", 0);
;;;45     	
;;;46     }
00001e  bd10              POP      {r4,pc}
;;;47     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 388 "..\\Libraries\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 402
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____RRX|
#line 587
|__asm___5_bsp_c_bsp_Init____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
