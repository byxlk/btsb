; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\spi_flash_fatfs.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\spi_flash_fatfs.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\RTOS\Template -I..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Device\ST\STM32F2xx\Include -I..\FatFS\src -I..\FreeRTOS\include -I..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\User -I..\User\bsp -I..\User\emWinTask -I..\STemWin\Config -I..\STemWin\DisplayDriver -I..\STemWin\inc -I..\STemWin\OS -IH:\BluetoothSoundBox\Project_BtSB\SZ_VIPIN_BTSB_Project\Project\RTE -IC:\Keil_v521a\ARM\PACK\Keil\STM32F2xx_DFP\2.6.0\Drivers\CMSIS\Device\ST\STM32F2xx\Include -IC:\Keil_v521a\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DSTM32F205xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\spi_flash_fatfs.crf ..\User\spi_flash_fatfs.c]
                          THUMB

                          AREA ||i.CreateDir||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  CreateDir PROC
;;;455    */
;;;456    static void CreateDir(void)
000000  b510              PUSH     {r4,lr}
;;;457    {
000002  f5ad7d0e          SUB      sp,sp,#0x238
;;;458    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;459    	FRESULT result;
;;;460    	FATFS fs;
;;;461    
;;;462     	/* 挂载文件系统 */
;;;463    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000006  2200              MOVS     r2,#0
000008  a130              ADR      r1,|L1.204|
00000a  a801              ADD      r0,sp,#4
00000c  f7fffffe          BL       f_mount
000010  4604              MOV      r4,r0
;;;464    	if (result != FR_OK)
000012  b12c              CBZ      r4,|L1.32|
;;;465    	{
;;;466    		printf("挂载文件系统失败 (%s)\r\n",  FR_Table[result]);
000014  482e              LDR      r0,|L1.208|
000016  f8501024          LDR      r1,[r0,r4,LSL #2]
00001a  a02e              ADR      r0,|L1.212|
00001c  f7fffffe          BL       __2printf
                  |L1.32|
;;;467    	}
;;;468    
;;;469    	/* 创建目录/Dir1 */
;;;470    	result = f_mkdir("/Dir1");
000020  a032              ADR      r0,|L1.236|
000022  f7fffffe          BL       f_mkdir
000026  4604              MOV      r4,r0
;;;471    	if (result == FR_OK)
000028  b91c              CBNZ     r4,|L1.50|
;;;472    	{
;;;473    		printf("f_mkdir Dir1 Ok\r\n");
00002a  a032              ADR      r0,|L1.244|
00002c  f7fffffe          BL       __2printf
000030  e011              B        |L1.86|
                  |L1.50|
;;;474    	}
;;;475    	else if (result == FR_EXIST)
000032  2c08              CMP      r4,#8
000034  d106              BNE      |L1.68|
;;;476    	{
;;;477    		printf("Dir1 目录已经存在(%s)\r\n",  FR_Table[result]);
000036  4826              LDR      r0,|L1.208|
000038  f8501024          LDR      r1,[r0,r4,LSL #2]
00003c  a032              ADR      r0,|L1.264|
00003e  f7fffffe          BL       __2printf
000042  e008              B        |L1.86|
                  |L1.68|
;;;478    	}
;;;479    	else
;;;480    	{
;;;481    		printf("f_mkdir Dir1 失败 (%s)\r\n",  FR_Table[result]);
000044  4822              LDR      r0,|L1.208|
000046  f8501024          LDR      r1,[r0,r4,LSL #2]
00004a  a035              ADR      r0,|L1.288|
00004c  f7fffffe          BL       __2printf
                  |L1.80|
;;;482    		return;
;;;483    	}
;;;484    
;;;485    	/* 创建目录/Dir2 */
;;;486    	result = f_mkdir("/Dir2");
;;;487    	if (result == FR_OK)
;;;488    	{
;;;489    		printf("f_mkdir Dir2 Ok\r\n");
;;;490    	}
;;;491    	else if (result == FR_EXIST)
;;;492    	{
;;;493    		printf("Dir2 目录已经存在(%s)\r\n",  FR_Table[result]);
;;;494    	}
;;;495    	else
;;;496    	{
;;;497    		printf("f_mkdir Dir2 失败 (%s)\r\n",  FR_Table[result]);
;;;498    		return;
;;;499    	}
;;;500    
;;;501    	/* 创建子目录 /Dir1/Dir1_1	   注意：创建子目录Dir1_1时，必须先创建好Dir1 */
;;;502    	result = f_mkdir("/Dir1/Dir1_1"); /* */
;;;503    	if (result == FR_OK)
;;;504    	{
;;;505    		printf("f_mkdir Dir1_1 成功\r\n");
;;;506    	}
;;;507    	else if (result == FR_EXIST)
;;;508    	{
;;;509    		printf("Dir1_1 目录已经存在 (%s)\r\n",  FR_Table[result]);
;;;510    	}
;;;511    	else
;;;512    	{
;;;513    		printf("f_mkdir Dir1_1 失败 (%s)\r\n",  FR_Table[result]);
;;;514    		return;
;;;515    	}
;;;516    
;;;517    	/* 卸载文件系统 */
;;;518    	result  = f_mount(NULL, "0:", 0);
;;;519    }
000050  f50d7d0e          ADD      sp,sp,#0x238
000054  bd10              POP      {r4,pc}
                  |L1.86|
000056  a039              ADR      r0,|L1.316|
000058  f7fffffe          BL       f_mkdir
00005c  4604              MOV      r4,r0                 ;486
00005e  b91c              CBNZ     r4,|L1.104|
000060  a038              ADR      r0,|L1.324|
000062  f7fffffe          BL       __2printf
000066  e00f              B        |L1.136|
                  |L1.104|
000068  2c08              CMP      r4,#8                 ;491
00006a  d106              BNE      |L1.122|
00006c  4818              LDR      r0,|L1.208|
00006e  f8501024          LDR      r1,[r0,r4,LSL #2]     ;493
000072  a039              ADR      r0,|L1.344|
000074  f7fffffe          BL       __2printf
000078  e006              B        |L1.136|
                  |L1.122|
00007a  4815              LDR      r0,|L1.208|
00007c  f8501024          LDR      r1,[r0,r4,LSL #2]     ;497
000080  a03b              ADR      r0,|L1.368|
000082  f7fffffe          BL       __2printf
000086  e7e3              B        |L1.80|
                  |L1.136|
000088  a040              ADR      r0,|L1.396|
00008a  f7fffffe          BL       f_mkdir
00008e  4604              MOV      r4,r0                 ;502
000090  b91c              CBNZ     r4,|L1.154|
000092  a042              ADR      r0,|L1.412|
000094  f7fffffe          BL       __2printf
000098  e00f              B        |L1.186|
                  |L1.154|
00009a  2c08              CMP      r4,#8                 ;507
00009c  d106              BNE      |L1.172|
00009e  480c              LDR      r0,|L1.208|
0000a0  f8501024          LDR      r1,[r0,r4,LSL #2]     ;509
0000a4  a043              ADR      r0,|L1.436|
0000a6  f7fffffe          BL       __2printf
0000aa  e006              B        |L1.186|
                  |L1.172|
0000ac  4808              LDR      r0,|L1.208|
0000ae  f8501024          LDR      r1,[r0,r4,LSL #2]     ;513
0000b2  a047              ADR      r0,|L1.464|
0000b4  f7fffffe          BL       __2printf
0000b8  e7ca              B        |L1.80|
                  |L1.186|
0000ba  2200              MOVS     r2,#0                 ;518
0000bc  a103              ADR      r1,|L1.204|
0000be  4610              MOV      r0,r2                 ;518
0000c0  f7fffffe          BL       f_mount
0000c4  4604              MOV      r4,r0                 ;518
0000c6  bf00              NOP      
0000c8  e7c2              B        |L1.80|
;;;520    
                          ENDP

0000ca  0000              DCW      0x0000
                  |L1.204|
0000cc  303a00            DCB      "0:",0
0000cf  00                DCB      0
                  |L1.208|
                          DCD      FR_Table
                  |L1.212|
0000d4  b9d2d4d8          DCB      185,210,212,216,206,196,188,254,207,181,205,179,202,167,176
0000d8  cec4bcfe
0000dc  cfb5cdb3
0000e0  caa7b0  
0000e3  dc202825          DCB      220," (%s)\r\n",0
0000e7  73290d0a
0000eb  00      
                  |L1.236|
0000ec  2f446972          DCB      "/Dir1",0
0000f0  3100    
0000f2  00                DCB      0
0000f3  00                DCB      0
                  |L1.244|
0000f4  665f6d6b          DCB      "f_mkdir Dir1 Ok\r\n",0
0000f8  64697220
0000fc  44697231
000100  204f6b0d
000104  0a00    
000106  00                DCB      0
000107  00                DCB      0
                  |L1.264|
000108  44697231          DCB      "Dir1 ",196,191,194,188,210,209,190,173,180,230,212,218,"("
00010c  20c4bfc2
000110  bcd2d1be
000114  adb4e6d4
000118  da28    
00011a  2573290d          DCB      "%s)\r\n",0
00011e  0a00    
                  |L1.288|
000120  665f6d6b          DCB      "f_mkdir Dir1 ",202,167,176,220," (%s)\r\n",0
000124  64697220
000128  44697231
00012c  20caa7b0
000130  dc202825
000134  73290d0a
000138  00      
000139  00                DCB      0
00013a  00                DCB      0
00013b  00                DCB      0
                  |L1.316|
00013c  2f446972          DCB      "/Dir2",0
000140  3200    
000142  00                DCB      0
000143  00                DCB      0
                  |L1.324|
000144  665f6d6b          DCB      "f_mkdir Dir2 Ok\r\n",0
000148  64697220
00014c  44697232
000150  204f6b0d
000154  0a00    
000156  00                DCB      0
000157  00                DCB      0
                  |L1.344|
000158  44697232          DCB      "Dir2 ",196,191,194,188,210,209,190,173,180,230,212,218,"("
00015c  20c4bfc2
000160  bcd2d1be
000164  adb4e6d4
000168  da28    
00016a  2573290d          DCB      "%s)\r\n",0
00016e  0a00    
                  |L1.368|
000170  665f6d6b          DCB      "f_mkdir Dir2 ",202,167,176,220," (%s)\r\n",0
000174  64697220
000178  44697232
00017c  20caa7b0
000180  dc202825
000184  73290d0a
000188  00      
000189  00                DCB      0
00018a  00                DCB      0
00018b  00                DCB      0
                  |L1.396|
00018c  2f446972          DCB      "/Dir1/Dir1_1",0
000190  312f4469
000194  72315f31
000198  00      
000199  00                DCB      0
00019a  00                DCB      0
00019b  00                DCB      0
                  |L1.412|
00019c  665f6d6b          DCB      "f_mkdir Dir1_1 ",179,201,185,166,"\r\n",0
0001a0  64697220
0001a4  44697231
0001a8  5f3120b3
0001ac  c9b9a60d
0001b0  0a00    
0001b2  00                DCB      0
0001b3  00                DCB      0
                  |L1.436|
0001b4  44697231          DCB      "Dir1_1 ",196,191,194,188,210,209,190,173,180,230,212,218
0001b8  5f3120c4
0001bc  bfc2bcd2
0001c0  d1beadb4
0001c4  e6d4da  
0001c7  20282573          DCB      " (%s)\r\n",0
0001cb  290d0a00
0001cf  00                DCB      0
                  |L1.464|
0001d0  665f6d6b          DCB      "f_mkdir Dir1_1 ",202,167,176,220," (%s)\r\n",0
0001d4  64697220
0001d8  44697231
0001dc  5f3120ca
0001e0  a7b0dc20
0001e4  28257329
0001e8  0d0a00  
0001eb  00                DCB      0

                          AREA ||i.CreateNewFile||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  CreateNewFile PROC
;;;342    */
;;;343    static void CreateNewFile(void)
000000  b510              PUSH     {r4,lr}
;;;344    {
000002  f5ad6d92          SUB      sp,sp,#0x490
;;;345    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;346    	FRESULT result;
;;;347    	FATFS fs;
;;;348    	FIL file;
;;;349    	DIR DirInf;
;;;350    	uint32_t bw;
;;;351    
;;;352     	/* 挂载文件系统 */
;;;353    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000006  2200              MOVS     r2,#0
000008  a11d              ADR      r1,|L2.128|
00000a  a897              ADD      r0,sp,#0x25c
00000c  f7fffffe          BL       f_mount
000010  4604              MOV      r4,r0
;;;354    	if (result != FR_OK)
000012  b12c              CBZ      r4,|L2.32|
;;;355    	{
;;;356    		printf("挂载文件系统失败 (%s)\r\n",  FR_Table[result]);
000014  481b              LDR      r0,|L2.132|
000016  f8501024          LDR      r1,[r0,r4,LSL #2]
00001a  a01b              ADR      r0,|L2.136|
00001c  f7fffffe          BL       __2printf
                  |L2.32|
;;;357    	}
;;;358    
;;;359    	/* 打开根文件夹 */
;;;360    	result = f_opendir(&DirInf, "0:/"); /* 如果不带参数，则从当前目录开始 */
000020  a11f              ADR      r1,|L2.160|
000022  a801              ADD      r0,sp,#4
000024  f7fffffe          BL       f_opendir
000028  4604              MOV      r4,r0
;;;361    	if (result != FR_OK)
00002a  b144              CBZ      r4,|L2.62|
;;;362    	{
;;;363    		printf("打开根目录失败 (%s)\r\n",  FR_Table[result]);
00002c  4815              LDR      r0,|L2.132|
00002e  f8501024          LDR      r1,[r0,r4,LSL #2]
000032  a01c              ADR      r0,|L2.164|
000034  f7fffffe          BL       __2printf
                  |L2.56|
;;;364    		return;
;;;365    	}
;;;366    
;;;367    	/* 打开文件 */
;;;368    	result = f_open(&file, "armfly.txt", FA_CREATE_ALWAYS | FA_WRITE);
;;;369    
;;;370    	/* 写一串数据 */
;;;371    	result = f_write(&file, "FatFS Write Demo \r\n www.armfly.com \r\n", 34, &bw);
;;;372    	if (result == FR_OK)
;;;373    	{
;;;374    		printf("armfly.txt 文件写入成功\r\n");
;;;375    	}
;;;376    	else
;;;377    	{
;;;378    		printf("armfly.txt 文件写入失败\r\n");
;;;379    	}
;;;380    
;;;381    	/* 关闭文件*/
;;;382    	f_close(&file);
;;;383    
;;;384    	/* 卸载文件系统 */
;;;385    	result  = f_mount(NULL, "0:", 0);
;;;386    }
000038  f50d6d92          ADD      sp,sp,#0x490
00003c  bd10              POP      {r4,pc}
                  |L2.62|
00003e  220a              MOVS     r2,#0xa               ;368
000040  a11e              ADR      r1,|L2.188|
000042  a80d              ADD      r0,sp,#0x34           ;368
000044  f7fffffe          BL       f_open
000048  4604              MOV      r4,r0                 ;368
00004a  466b              MOV      r3,sp                 ;371
00004c  2222              MOVS     r2,#0x22              ;371
00004e  a11e              ADR      r1,|L2.200|
000050  a80d              ADD      r0,sp,#0x34           ;371
000052  f7fffffe          BL       f_write
000056  4604              MOV      r4,r0                 ;371
000058  b91c              CBNZ     r4,|L2.98|
00005a  a025              ADR      r0,|L2.240|
00005c  f7fffffe          BL       __2printf
000060  e002              B        |L2.104|
                  |L2.98|
000062  a02a              ADR      r0,|L2.268|
000064  f7fffffe          BL       __2printf
                  |L2.104|
000068  a80d              ADD      r0,sp,#0x34           ;382
00006a  f7fffffe          BL       f_close
00006e  2200              MOVS     r2,#0                 ;385
000070  a103              ADR      r1,|L2.128|
000072  4610              MOV      r0,r2                 ;385
000074  f7fffffe          BL       f_mount
000078  4604              MOV      r4,r0                 ;385
00007a  bf00              NOP      
00007c  e7dc              B        |L2.56|
;;;387    
                          ENDP

00007e  0000              DCW      0x0000
                  |L2.128|
000080  303a00            DCB      "0:",0
000083  00                DCB      0
                  |L2.132|
                          DCD      FR_Table
                  |L2.136|
000088  b9d2d4d8          DCB      185,210,212,216,206,196,188,254,207,181,205,179,202,167,176
00008c  cec4bcfe
000090  cfb5cdb3
000094  caa7b0  
000097  dc202825          DCB      220," (%s)\r\n",0
00009b  73290d0a
00009f  00      
                  |L2.160|
0000a0  303a2f00          DCB      "0:/",0
                  |L2.164|
0000a4  b4f2bfaa          DCB      180,242,191,170,184,249,196,191,194,188,202,167,176,220," "
0000a8  b8f9c4bf
0000ac  c2bccaa7
0000b0  b0dc20  
0000b3  28257329          DCB      "(%s)\r\n",0
0000b7  0d0a00  
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L2.188|
0000bc  61726d66          DCB      "armfly.txt",0
0000c0  6c792e74
0000c4  787400  
0000c7  00                DCB      0
                  |L2.200|
0000c8  46617446          DCB      "FatFS Write Demo \r\n www.armfly.com \r\n",0
0000cc  53205772
0000d0  69746520
0000d4  44656d6f
0000d8  200d0a20
0000dc  7777772e
0000e0  61726d66
0000e4  6c792e63
0000e8  6f6d200d
0000ec  0a00    
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L2.240|
0000f0  61726d66          DCB      "armfly.txt ",206,196,188,254,208,180,200,235,179,201,185
0000f4  6c792e74
0000f8  787420ce
0000fc  c4bcfed0
000100  b4c8ebb3
000104  c9b9    
000106  a60d0a00          DCB      166,"\r\n",0
00010a  00                DCB      0
00010b  00                DCB      0
                  |L2.268|
00010c  61726d66          DCB      "armfly.txt ",206,196,188,254,208,180,200,235,202,167,176
000110  6c792e74
000114  787420ce
000118  c4bcfed0
00011c  b4c8ebca
000120  a7b0    
000122  dc0d0a00          DCB      220,"\r\n",0
000126  00                DCB      0
000127  00                DCB      0

                          AREA ||i.DeleteDirFile||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  DeleteDirFile PROC
;;;528    */
;;;529    static void DeleteDirFile(void)
000000  b530              PUSH     {r4,r5,lr}
;;;530    {
000002  f5ad7d11          SUB      sp,sp,#0x244
;;;531    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;532    	FRESULT result;
;;;533    	FATFS fs;
;;;534    	char FileName[13];
;;;535    	uint8_t i;
;;;536    
;;;537     	/* 挂载文件系统 */
;;;538    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000006  2200              MOVS     r2,#0
000008  a152              ADR      r1,|L3.340|
00000a  a804              ADD      r0,sp,#0x10
00000c  f7fffffe          BL       f_mount
000010  4604              MOV      r4,r0
;;;539    	if (result != FR_OK)
000012  b12c              CBZ      r4,|L3.32|
;;;540    	{
;;;541    		printf("挂载文件系统失败 (%s)\r\n",  FR_Table[result]);
000014  4850              LDR      r0,|L3.344|
000016  f8501024          LDR      r1,[r0,r4,LSL #2]
00001a  a050              ADR      r0,|L3.348|
00001c  f7fffffe          BL       __2printf
                  |L3.32|
;;;542    	}
;;;543    
;;;544    	#if 0
;;;545    	/* 打开根文件夹 */
;;;546    	result = f_opendir(&DirInf, "/"); /* 如果不带参数，则从当前目录开始 */
;;;547    	if (result != FR_OK)
;;;548    	{
;;;549    		printf("打开根目录失败(%s)\r\n",  FR_Table[result]);
;;;550    		return;
;;;551    	}
;;;552    	#endif
;;;553    
;;;554    	/* 删除目录/Dir1 【因为还存在目录非空（存在子目录)，所以这次删除会失败】*/
;;;555    	result = f_unlink("/Dir1");
000020  a054              ADR      r0,|L3.372|
000022  f7fffffe          BL       f_unlink
000026  4604              MOV      r4,r0
;;;556    	if (result == FR_OK)
000028  b91c              CBNZ     r4,|L3.50|
;;;557    	{
;;;558    		printf("删除目录Dir1成功\r\n");
00002a  a054              ADR      r0,|L3.380|
00002c  f7fffffe          BL       __2printf
000030  e00c              B        |L3.76|
                  |L3.50|
;;;559    	}
;;;560    	else if (result == FR_NO_FILE)
000032  2c04              CMP      r4,#4
000034  d104              BNE      |L3.64|
;;;561    	{
;;;562    		printf("没有发现文件或目录 :%s\r\n", "/Dir1");
000036  a14f              ADR      r1,|L3.372|
000038  a055              ADR      r0,|L3.400|
00003a  f7fffffe          BL       __2printf
00003e  e005              B        |L3.76|
                  |L3.64|
;;;563    	}
;;;564    	else
;;;565    	{
;;;566    		printf("删除Dir1失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
000040  4845              LDR      r0,|L3.344|
000042  f8501024          LDR      r1,[r0,r4,LSL #2]
000046  a059              ADR      r0,|L3.428|
000048  f7fffffe          BL       __2printf
                  |L3.76|
;;;567    	}
;;;568    
;;;569    	/* 先删除目录/Dir1/Dir1_1 */
;;;570    	result = f_unlink("/Dir1/Dir1_1");
00004c  a064              ADR      r0,|L3.480|
00004e  f7fffffe          BL       f_unlink
000052  4604              MOV      r4,r0
;;;571    	if (result == FR_OK)
000054  b91c              CBNZ     r4,|L3.94|
;;;572    	{
;;;573    		printf("删除子目录/Dir1/Dir1_1成功\r\n");
000056  a066              ADR      r0,|L3.496|
000058  f7fffffe          BL       __2printf
00005c  e00e              B        |L3.124|
                  |L3.94|
;;;574    	}
;;;575    	else if ((result == FR_NO_FILE) || (result == FR_NO_PATH))
00005e  2c04              CMP      r4,#4
000060  d001              BEQ      |L3.102|
000062  2c05              CMP      r4,#5
000064  d104              BNE      |L3.112|
                  |L3.102|
;;;576    	{
;;;577    		printf("没有发现文件或目录 :%s\r\n", "/Dir1/Dir1_1");
000066  a15e              ADR      r1,|L3.480|
000068  a049              ADR      r0,|L3.400|
00006a  f7fffffe          BL       __2printf
00006e  e005              B        |L3.124|
                  |L3.112|
;;;578    	}
;;;579    	else
;;;580    	{
;;;581    		printf("删除子目录/Dir1/Dir1_1失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
000070  4839              LDR      r0,|L3.344|
000072  f8501024          LDR      r1,[r0,r4,LSL #2]
000076  a066              ADR      r0,|L3.528|
000078  f7fffffe          BL       __2printf
                  |L3.124|
;;;582    	}
;;;583    
;;;584    	/* 先删除目录/Dir1 */
;;;585    	result = f_unlink("/Dir1");
00007c  a03d              ADR      r0,|L3.372|
00007e  f7fffffe          BL       f_unlink
000082  4604              MOV      r4,r0
;;;586    	if (result == FR_OK)
000084  b91c              CBNZ     r4,|L3.142|
;;;587    	{
;;;588    		printf("删除目录Dir1成功\r\n");
000086  a03d              ADR      r0,|L3.380|
000088  f7fffffe          BL       __2printf
00008c  e00c              B        |L3.168|
                  |L3.142|
;;;589    	}
;;;590    	else if (result == FR_NO_FILE)
00008e  2c04              CMP      r4,#4
000090  d104              BNE      |L3.156|
;;;591    	{
;;;592    		printf("没有发现文件或目录 :%s\r\n", "/Dir1");
000092  a138              ADR      r1,|L3.372|
000094  a03e              ADR      r0,|L3.400|
000096  f7fffffe          BL       __2printf
00009a  e005              B        |L3.168|
                  |L3.156|
;;;593    	}
;;;594    	else
;;;595    	{
;;;596    		printf("删除Dir1失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
00009c  482e              LDR      r0,|L3.344|
00009e  f8501024          LDR      r1,[r0,r4,LSL #2]
0000a2  a042              ADR      r0,|L3.428|
0000a4  f7fffffe          BL       __2printf
                  |L3.168|
;;;597    	}
;;;598    
;;;599    	/* 删除目录/Dir2 */
;;;600    	result = f_unlink("/Dir2");
0000a8  a069              ADR      r0,|L3.592|
0000aa  f7fffffe          BL       f_unlink
0000ae  4604              MOV      r4,r0
;;;601    	if (result == FR_OK)
0000b0  b91c              CBNZ     r4,|L3.186|
;;;602    	{
;;;603    		printf("删除目录 Dir2 成功\r\n");
0000b2  a069              ADR      r0,|L3.600|
0000b4  f7fffffe          BL       __2printf
0000b8  e00c              B        |L3.212|
                  |L3.186|
;;;604    	}
;;;605    	else if (result == FR_NO_FILE)
0000ba  2c04              CMP      r4,#4
0000bc  d104              BNE      |L3.200|
;;;606    	{
;;;607    		printf("没有发现文件或目录 :%s\r\n", "/Dir2");
0000be  a164              ADR      r1,|L3.592|
0000c0  a033              ADR      r0,|L3.400|
0000c2  f7fffffe          BL       __2printf
0000c6  e005              B        |L3.212|
                  |L3.200|
;;;608    	}
;;;609    	else
;;;610    	{
;;;611    		printf("删除Dir2 失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
0000c8  4823              LDR      r0,|L3.344|
0000ca  f8501024          LDR      r1,[r0,r4,LSL #2]
0000ce  a068              ADR      r0,|L3.624|
0000d0  f7fffffe          BL       __2printf
                  |L3.212|
;;;612    	}
;;;613    
;;;614    	/* 删除文件 armfly.txt */
;;;615    	result = f_unlink("armfly.txt");
0000d4  a073              ADR      r0,|L3.676|
0000d6  f7fffffe          BL       f_unlink
0000da  4604              MOV      r4,r0
;;;616    	if (result == FR_OK)
0000dc  b91c              CBNZ     r4,|L3.230|
;;;617    	{
;;;618    		printf("删除文件 armfly.txt 成功\r\n");
0000de  a074              ADR      r0,|L3.688|
0000e0  f7fffffe          BL       __2printf
0000e4  e00c              B        |L3.256|
                  |L3.230|
;;;619    	}
;;;620    	else if (result == FR_NO_FILE)
0000e6  2c04              CMP      r4,#4
0000e8  d104              BNE      |L3.244|
;;;621    	{
;;;622    		printf("没有发现文件或目录 :%s\r\n", "armfly.txt");
0000ea  a16e              ADR      r1,|L3.676|
0000ec  a028              ADR      r0,|L3.400|
0000ee  f7fffffe          BL       __2printf
0000f2  e005              B        |L3.256|
                  |L3.244|
;;;623    	}
;;;624    	else
;;;625    	{
;;;626    		printf("删除armfly.txt失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
0000f4  4818              LDR      r0,|L3.344|
0000f6  f8501024          LDR      r1,[r0,r4,LSL #2]
0000fa  a074              ADR      r0,|L3.716|
0000fc  f7fffffe          BL       __2printf
                  |L3.256|
;;;627    	}
;;;628    
;;;629    	/* 删除文件 speed1.txt */
;;;630    	for (i = 0; i < 20; i++)
000100  2500              MOVS     r5,#0
000102  e01c              B        |L3.318|
                  |L3.260|
;;;631    	{
;;;632    		sprintf(FileName, "Speed%02d.txt", i);		/* 每写1次，序号递增 */
000104  462a              MOV      r2,r5
000106  a17f              ADR      r1,|L3.772|
000108  4668              MOV      r0,sp
00010a  f7fffffe          BL       __2sprintf
;;;633    		result = f_unlink(FileName);
00010e  4668              MOV      r0,sp
000110  f7fffffe          BL       f_unlink
000114  4604              MOV      r4,r0
;;;634    		if (result == FR_OK)
000116  b924              CBNZ     r4,|L3.290|
;;;635    		{
;;;636    			printf("删除文件%s成功\r\n", FileName);
000118  4669              MOV      r1,sp
00011a  a07e              ADR      r0,|L3.788|
00011c  f7fffffe          BL       __2printf
000120  e00b              B        |L3.314|
                  |L3.290|
;;;637    		}
;;;638    		else if (result == FR_NO_FILE)
000122  2c04              CMP      r4,#4
000124  d104              BNE      |L3.304|
;;;639    		{
;;;640    			printf("没有发现文件:%s\r\n", FileName);
000126  4669              MOV      r1,sp
000128  a07f              ADR      r0,|L3.808|
00012a  f7fffffe          BL       __2printf
00012e  e004              B        |L3.314|
                  |L3.304|
;;;641    		}
;;;642    		else
;;;643    		{
;;;644    			printf("删除%s文件失败(错误代码 = %d) 文件只读或目录非空\r\n", FileName, result);
000130  4622              MOV      r2,r4
000132  4669              MOV      r1,sp
000134  a081              ADR      r0,|L3.828|
000136  f7fffffe          BL       __2printf
                  |L3.314|
00013a  1c68              ADDS     r0,r5,#1              ;630
00013c  b2c5              UXTB     r5,r0                 ;630
                  |L3.318|
00013e  2d14              CMP      r5,#0x14              ;630
000140  dbe0              BLT      |L3.260|
;;;645    		}
;;;646    	}
;;;647    
;;;648    	/* 卸载文件系统 */
;;;649    	result  = f_mount(NULL, "0:", 0);
000142  2200              MOVS     r2,#0
000144  a103              ADR      r1,|L3.340|
000146  4610              MOV      r0,r2
000148  f7fffffe          BL       f_mount
00014c  4604              MOV      r4,r0
;;;650    }
00014e  f50d7d11          ADD      sp,sp,#0x244
000152  bd30              POP      {r4,r5,pc}
;;;651    
                          ENDP

                  |L3.340|
000154  303a00            DCB      "0:",0
000157  00                DCB      0
                  |L3.344|
                          DCD      FR_Table
                  |L3.348|
00015c  b9d2d4d8          DCB      185,210,212,216,206,196,188,254,207,181,205,179,202,167,176
000160  cec4bcfe
000164  cfb5cdb3
000168  caa7b0  
00016b  dc202825          DCB      220," (%s)\r\n",0
00016f  73290d0a
000173  00      
                  |L3.372|
000174  2f446972          DCB      "/Dir1",0
000178  3100    
00017a  00                DCB      0
00017b  00                DCB      0
                  |L3.380|
00017c  c9beb3fd          DCB      201,190,179,253,196,191,194,188,"Dir1",179,201,185,166,"\r"
000180  c4bfc2bc
000184  44697231
000188  b3c9b9a6
00018c  0d      
00018d  0a00              DCB      "\n",0
00018f  00                DCB      0
                  |L3.400|
000190  c3bbd3d0          DCB      195,187,211,208,183,162,207,214,206,196,188,254,187,242,196
000194  b7a2cfd6
000198  cec4bcfe
00019c  bbf2c4  
00019f  bfc2bc20          DCB      191,194,188," :%s\r\n",0
0001a3  3a25730d
0001a7  0a00    
0001a9  00                DCB      0
0001aa  00                DCB      0
0001ab  00                DCB      0
                  |L3.428|
0001ac  c9beb3fd          DCB      201,190,179,253,"Dir1",202,167,176,220,"(",180,237,206,243
0001b0  44697231
0001b4  caa7b0dc
0001b8  28b4edce
0001bc  f3      
0001bd  b4fac2eb          DCB      180,250,194,235," = %s) ",206,196,188,254,214,187,182,193
0001c1  203d2025
0001c5  732920ce
0001c9  c4bcfed6
0001cd  bbb6c1  
0001d0  bbf2c4bf          DCB      187,242,196,191,194,188,183,199,191,213,"\r\n",0
0001d4  c2bcb7c7
0001d8  bfd50d0a
0001dc  00      
0001dd  00                DCB      0
0001de  00                DCB      0
0001df  00                DCB      0
                  |L3.480|
0001e0  2f446972          DCB      "/Dir1/Dir1_1",0
0001e4  312f4469
0001e8  72315f31
0001ec  00      
0001ed  00                DCB      0
0001ee  00                DCB      0
0001ef  00                DCB      0
                  |L3.496|
0001f0  c9beb3fd          DCB      201,190,179,253,215,211,196,191,194,188,"/Dir1/Dir1_1",179
0001f4  d7d3c4bf
0001f8  c2bc2f44
0001fc  6972312f
000200  44697231
000204  5f31b3  
000207  c9b9a60d          DCB      201,185,166,"\r\n",0
00020b  0a00    
00020d  00                DCB      0
00020e  00                DCB      0
00020f  00                DCB      0
                  |L3.528|
000210  c9beb3fd          DCB      201,190,179,253,215,211,196,191,194,188,"/Dir1/Dir1_1",202
000214  d7d3c4bf
000218  c2bc2f44
00021c  6972312f
000220  44697231
000224  5f31ca  
000227  a7b0dc28          DCB      167,176,220,"(",180,237,206,243,180,250,194,235," = %s) "
00022b  b4edcef3
00022f  b4fac2eb
000233  203d2025
000237  732920  
00023a  cec4bcfe          DCB      206,196,188,254,214,187,182,193,187,242,196,191,194,188,183
00023e  d6bbb6c1
000242  bbf2c4bf
000246  c2bcb7  
000249  c7bfd50d          DCB      199,191,213,"\r\n",0
00024d  0a00    
00024f  00                DCB      0
                  |L3.592|
000250  2f446972          DCB      "/Dir2",0
000254  3200    
000256  00                DCB      0
000257  00                DCB      0
                  |L3.600|
000258  c9beb3fd          DCB      201,190,179,253,196,191,194,188," Dir2 ",179,201,185,166
00025c  c4bfc2bc
000260  20446972
000264  3220b3c9
000268  b9a6    
00026a  0d0a00            DCB      "\r\n",0
00026d  00                DCB      0
00026e  00                DCB      0
00026f  00                DCB      0
                  |L3.624|
000270  c9beb3fd          DCB      201,190,179,253,"Dir2 ",202,167,176,220,"(",180,237,206,243
000274  44697232
000278  20caa7b0
00027c  dc28b4ed
000280  cef3    
000282  b4fac2eb          DCB      180,250,194,235," = %s) ",206,196,188,254,214,187,182,193
000286  203d2025
00028a  732920ce
00028e  c4bcfed6
000292  bbb6c1  
000295  bbf2c4bf          DCB      187,242,196,191,194,188,183,199,191,213,"\r\n",0
000299  c2bcb7c7
00029d  bfd50d0a
0002a1  00      
0002a2  00                DCB      0
0002a3  00                DCB      0
                  |L3.676|
0002a4  61726d66          DCB      "armfly.txt",0
0002a8  6c792e74
0002ac  787400  
0002af  00                DCB      0
                  |L3.688|
0002b0  c9beb3fd          DCB      201,190,179,253,206,196,188,254," armfly.txt ",179,201,185
0002b4  cec4bcfe
0002b8  2061726d
0002bc  666c792e
0002c0  74787420
0002c4  b3c9b9  
0002c7  a60d0a00          DCB      166,"\r\n",0
0002cb  00                DCB      0
                  |L3.716|
0002cc  c9beb3fd          DCB      201,190,179,253,"armfly.txt",202,167,176,220,"(",180,237
0002d0  61726d66
0002d4  6c792e74
0002d8  7874caa7
0002dc  b0dc28b4
0002e0  ed      
0002e1  cef3b4fa          DCB      206,243,180,250,194,235," = %s) ",206,196,188,254,214,187
0002e5  c2eb203d
0002e9  20257329
0002ed  20cec4bc
0002f1  fed6bb  
0002f4  b6c1bbf2          DCB      182,193,187,242,196,191,194,188,183,199,191,213,"\r\n",0
0002f8  c4bfc2bc
0002fc  b7c7bfd5
000300  0d0a00  
000303  00                DCB      0
                  |L3.772|
000304  53706565          DCB      "Speed%02d.txt",0
000308  64253032
00030c  642e7478
000310  7400    
000312  00                DCB      0
000313  00                DCB      0
                  |L3.788|
000314  c9beb3fd          DCB      201,190,179,253,206,196,188,254,"%s",179,201,185,166,"\r"
000318  cec4bcfe
00031c  2573b3c9
000320  b9a60d  
000323  0a00              DCB      "\n",0
000325  00                DCB      0
000326  00                DCB      0
000327  00                DCB      0
                  |L3.808|
000328  c3bbd3d0          DCB      195,187,211,208,183,162,207,214,206,196,188,254,":%s\r\n"
00032c  b7a2cfd6
000330  cec4bcfe
000334  3a25730d
000338  0a      
000339  00                DCB      0
00033a  00                DCB      0
00033b  00                DCB      0
                  |L3.828|
00033c  c9beb3fd          DCB      201,190,179,253,"%s",206,196,188,254,202,167,176,220,"(",180
000340  2573cec4
000344  bcfecaa7
000348  b0dc28b4
00034c  edcef3b4          DCB      237,206,243,180,250,194,235," = %d) ",206,196,188,254,214
000350  fac2eb20
000354  3d202564
000358  2920cec4
00035c  bcfed6  
00035f  bbb6c1bb          DCB      187,182,193,187,242,196,191,194,188,183,199,191,213,"\r\n"
000363  f2c4bfc2
000367  bcb7c7bf
00036b  d50d0a  
00036e  00                DCB      0
00036f  00                DCB      0

                          AREA ||i.DemoFatFS||, CODE, READONLY, ALIGN=2

                  DemoFatFS PROC
;;;70     */
;;;71     void DemoFatFS(void)
000000  b508              PUSH     {r3,lr}
;;;72     {
;;;73     	uint8_t cmd;
;;;74     	
;;;75     	/* 打印命令列表，用户可以通过串口操作指令 */
;;;76     	DispMenu();
000002  f7fffffe          BL       DispMenu
;;;77     	bsp_StartAutoTimer(1, 100);
000006  2164              MOVS     r1,#0x64
000008  2001              MOVS     r0,#1
00000a  f7fffffe          BL       bsp_StartAutoTimer
;;;78     	while(1)
00000e  e06b              B        |L4.232|
                  |L4.16|
;;;79     	{
;;;80     		bsp_Idle();		/* 这个函数在bsp.c文件。用户可以修改这个函数实现CPU休眠和喂狗 */
000010  f7fffffe          BL       bsp_Idle
;;;81     		
;;;82     		if(bsp_CheckTimer(1))
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       bsp_CheckTimer
00001a  b110              CBZ      r0,|L4.34|
;;;83     		{
;;;84     			bsp_LedToggle(1);
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       bsp_LedToggle
                  |L4.34|
;;;85     		}
;;;86     
;;;87     		if (comGetChar(COM1, &cmd))	/* 从串口读入一个字符(非阻塞方式) */
000022  4669              MOV      r1,sp
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       comGetChar
00002a  2800              CMP      r0,#0
00002c  d03b              BEQ      |L4.166|
;;;88     		{
;;;89     			printf("\r\n");
00002e  a02f              ADR      r0,|L4.236|
000030  f7fffffe          BL       __2printf
;;;90     			switch (cmd)
000034  f89d0000          LDRB     r0,[sp,#0]
000038  3830              SUBS     r0,r0,#0x30
00003a  2807              CMP      r0,#7
00003c  d22f              BCS      |L4.158|
00003e  e8dff000          TBB      [pc,r0]
000042  040a              DCB      0x04,0x0a
000044  10161c22          DCB      0x10,0x16,0x1c,0x22
000048  2800              DCB      0x28,0x00
;;;91     			{
;;;92     				case '0':
;;;93     					printf("【0 - FileFormat】\r\n");
00004a  a029              ADR      r0,|L4.240|
00004c  f7fffffe          BL       __2printf
;;;94     					FileFormat();		/* 显示SD卡根目录下的文件名 */
000050  f7fffffe          BL       FileFormat
;;;95     					break;
000054  e026              B        |L4.164|
;;;96     				
;;;97     				case '1':
;;;98     					printf("【1 - ViewRootDir】\r\n");
000056  a02c              ADR      r0,|L4.264|
000058  f7fffffe          BL       __2printf
;;;99     					ViewRootDir();		/* 显示SD卡根目录下的文件名 */
00005c  f7fffffe          BL       ViewRootDir
;;;100    					break;
000060  e020              B        |L4.164|
;;;101    
;;;102    				case '2':
;;;103    					printf("【2 - CreateNewFile】\r\n");
000062  a02f              ADR      r0,|L4.288|
000064  f7fffffe          BL       __2printf
;;;104    					CreateNewFile();		/* 创建一个新文件,写入一个字符串 */
000068  f7fffffe          BL       CreateNewFile
;;;105    					break;
00006c  e01a              B        |L4.164|
;;;106    
;;;107    				case '3':
;;;108    					printf("【3 - ReadFileData】\r\n");
00006e  a032              ADR      r0,|L4.312|
000070  f7fffffe          BL       __2printf
;;;109    					ReadFileData();		/* 读取根目录下armfly.txt的内容 */
000074  f7fffffe          BL       ReadFileData
;;;110    					break;
000078  e014              B        |L4.164|
;;;111    
;;;112    				case '4':
;;;113    					printf("【4 - CreateDir】\r\n");
00007a  a035              ADR      r0,|L4.336|
00007c  f7fffffe          BL       __2printf
;;;114    					CreateDir();		/* 创建目录 */
000080  f7fffffe          BL       CreateDir
;;;115    					break;
000084  e00e              B        |L4.164|
;;;116    
;;;117    				case '5':
;;;118    					printf("【5 - DeleteDirFile】\r\n");
000086  a037              ADR      r0,|L4.356|
000088  f7fffffe          BL       __2printf
;;;119    					DeleteDirFile();	/* 删除目录和文件 */
00008c  f7fffffe          BL       DeleteDirFile
;;;120    					break;
000090  e008              B        |L4.164|
;;;121    
;;;122    				case '6':
;;;123    					printf("【6 - TestSpeed】\r\n");
000092  a03a              ADR      r0,|L4.380|
000094  f7fffffe          BL       __2printf
;;;124    					WriteFileTest();	/* 速度测试 */
000098  f7fffffe          BL       WriteFileTest
;;;125    					break;
00009c  e002              B        |L4.164|
                  |L4.158|
;;;126    
;;;127    				default:
;;;128    					DispMenu();
00009e  f7fffffe          BL       DispMenu
;;;129    					break;
0000a2  bf00              NOP      
                  |L4.164|
0000a4  bf00              NOP                            ;95
                  |L4.166|
;;;130    			}
;;;131    		}
;;;132    
;;;133    		/* 按键滤波和检测由后台systick中断服务程序实现，我们只需要调用bsp_GetKey读取键值即可。 */
;;;134    		switch (bsp_GetKey())	/* bsp_GetKey()读取键值, 无键按下时返回 KEY_NONE = 0 */
0000a6  f7fffffe          BL       bsp_GetKey
0000aa  2818              CMP      r0,#0x18
0000ac  d219              BCS      |L4.226|
0000ae  e8dff000          TBB      [pc,r0]
0000b2  190c              DCB      0x19,0x0c
0000b4  0d180e0f          DCB      0x0d,0x18,0x0e,0x0f
0000b8  18101118          DCB      0x18,0x10,0x11,0x18
0000bc  12181813          DCB      0x12,0x18,0x18,0x13
0000c0  18181418          DCB      0x18,0x18,0x14,0x18
0000c4  18151818          DCB      0x18,0x15,0x18,0x18
0000c8  1617              DCB      0x16,0x17
;;;135    		{
;;;136    			case KEY_DOWN_K1:			/* K1键按下 */
;;;137    				break;
0000ca  e00c              B        |L4.230|
;;;138    
;;;139    			case KEY_UP_K1:				/* K1键弹起 */
;;;140    				break;
0000cc  e00b              B        |L4.230|
;;;141    
;;;142    			case KEY_DOWN_K2:			/* K2键按下 */
;;;143    				break;
0000ce  e00a              B        |L4.230|
;;;144    
;;;145    			case KEY_UP_K2:				/* K2键弹起 */
;;;146    				break;
0000d0  e009              B        |L4.230|
;;;147    
;;;148    			case KEY_DOWN_K3:			/* K3键按下 */
;;;149    				break;
0000d2  e008              B        |L4.230|
;;;150    
;;;151    			case KEY_UP_K3:				/* K3键弹起 */
;;;152    				break;
0000d4  e007              B        |L4.230|
;;;153    
;;;154    			case JOY_DOWN_U:			/* 摇杆UP键按下 */
;;;155    				break;
0000d6  e006              B        |L4.230|
;;;156    
;;;157    			case JOY_DOWN_D:			/* 摇杆DOWN键按下 */
;;;158    				break;
0000d8  e005              B        |L4.230|
;;;159    
;;;160    			case JOY_DOWN_L:			/* 摇杆LEFT键按下 */
;;;161    				break;
0000da  e004              B        |L4.230|
;;;162    
;;;163    			case JOY_DOWN_R:			/* 摇杆RIGHT键按下 */
;;;164    				break;
0000dc  e003              B        |L4.230|
;;;165    
;;;166    			case JOY_DOWN_OK:			/* 摇杆OK键按下 */
;;;167    				break;
0000de  e002              B        |L4.230|
;;;168    
;;;169    			case JOY_UP_OK:				/* 摇杆OK键弹起 */
;;;170    				break;
0000e0  e001              B        |L4.230|
                  |L4.226|
;;;171    
;;;172    			case KEY_NONE:				/* 无键按下 */
0000e2  bf00              NOP      
;;;173    			default:
;;;174    				/* 其它的键值不处理 */
;;;175    				break;
0000e4  bf00              NOP      
                  |L4.230|
0000e6  bf00              NOP                            ;137
                  |L4.232|
0000e8  e792              B        |L4.16|
;;;176    		}
;;;177    	}
;;;178    }
;;;179    
                          ENDP

0000ea  0000              DCW      0x0000
                  |L4.236|
0000ec  0d0a00            DCB      "\r\n",0
0000ef  00                DCB      0
                  |L4.240|
0000f0  a1be3020          DCB      161,190,"0 - FileFormat",161,191,"\r\n",0
0000f4  2d204669
0000f8  6c65466f
0000fc  726d6174
000100  a1bf0d0a
000104  00      
000105  00                DCB      0
000106  00                DCB      0
000107  00                DCB      0
                  |L4.264|
000108  a1be3120          DCB      161,190,"1 - ViewRootDir",161,191,"\r\n",0
00010c  2d205669
000110  6577526f
000114  6f744469
000118  72a1bf0d
00011c  0a00    
00011e  00                DCB      0
00011f  00                DCB      0
                  |L4.288|
000120  a1be3220          DCB      161,190,"2 - CreateNewFile",161,191,"\r\n",0
000124  2d204372
000128  65617465
00012c  4e657746
000130  696c65a1
000134  bf0d0a00
                  |L4.312|
000138  a1be3320          DCB      161,190,"3 - ReadFileData",161,191,"\r\n",0
00013c  2d205265
000140  61644669
000144  6c654461
000148  7461a1bf
00014c  0d0a00  
00014f  00                DCB      0
                  |L4.336|
000150  a1be3420          DCB      161,190,"4 - CreateDir",161,191,"\r\n",0
000154  2d204372
000158  65617465
00015c  446972a1
000160  bf0d0a00
                  |L4.356|
000164  a1be3520          DCB      161,190,"5 - DeleteDirFile",161,191,"\r\n",0
000168  2d204465
00016c  6c657465
000170  44697246
000174  696c65a1
000178  bf0d0a00
                  |L4.380|
00017c  a1be3620          DCB      161,190,"6 - TestSpeed",161,191,"\r\n",0
000180  2d205465
000184  73745370
000188  656564a1
00018c  bf0d0a00

                          AREA ||i.DispMenu||, CODE, READONLY, ALIGN=2

                  DispMenu PROC
;;;187    */
;;;188    static void DispMenu(void)
000000  b510              PUSH     {r4,lr}
;;;189    {
;;;190    	printf("\r\n------------------------------------------------\r\n");
000002  a00f              ADR      r0,|L5.64|
000004  f7fffffe          BL       __2printf
;;;191    	printf("第一次使用请选择命令0进行SPI Flash格式化\r\n");
000008  a01b              ADR      r0,|L5.120|
00000a  f7fffffe          BL       __2printf
;;;192    	printf("请选择操作命令:\r\n");
00000e  a025              ADR      r0,|L5.164|
000010  f7fffffe          BL       __2printf
;;;193    	printf("0 - 对SPI_Flash进行文件系统格式化\r\n");
000014  a028              ADR      r0,|L5.184|
000016  f7fffffe          BL       __2printf
;;;194    	printf("1 - 显示根目录下的文件列表\r\n");
00001a  a030              ADR      r0,|L5.220|
00001c  f7fffffe          BL       __2printf
;;;195    	printf("2 - 创建一个新文件armfly.txt\r\n");
000020  a036              ADR      r0,|L5.252|
000022  f7fffffe          BL       __2printf
;;;196    	printf("3 - 读armfly.txt文件的内容\r\n");
000026  a03d              ADR      r0,|L5.284|
000028  f7fffffe          BL       __2printf
;;;197    	printf("4 - 创建目录\r\n");
00002c  a043              ADR      r0,|L5.316|
00002e  f7fffffe          BL       __2printf
;;;198    	printf("5 - 删除文件和目录\r\n");
000032  a046              ADR      r0,|L5.332|
000034  f7fffffe          BL       __2printf
;;;199    	printf("6 - 读写文件速度测试\r\n");
000038  a04a              ADR      r0,|L5.356|
00003a  f7fffffe          BL       __2printf
;;;200    }
00003e  bd10              POP      {r4,pc}
;;;201    
                          ENDP

                  |L5.64|
000040  0d0a2d2d          DCB      "\r\n------------------------------------------------\r\n"
000044  2d2d2d2d
000048  2d2d2d2d
00004c  2d2d2d2d
000050  2d2d2d2d
000054  2d2d2d2d
000058  2d2d2d2d
00005c  2d2d2d2d
000060  2d2d2d2d
000064  2d2d2d2d
000068  2d2d2d2d
00006c  2d2d2d2d
000070  2d2d0d0a
000074  00                DCB      0
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L5.120|
000078  b5dad2bb          DCB      181,218,210,187,180,206,202,185,211,195,199,235,209,161,212
00007c  b4cecab9
000080  d3c3c7eb
000084  d1a1d4  
000087  f1c3fcc1          DCB      241,195,252,193,238,"0",189,248,208,208,"SPI Flash",184,241
00008b  ee30bdf8
00008f  d0d05350
000093  4920466c
000097  617368b8
00009b  f1      
00009c  cabdbbaf          DCB      202,189,187,175,"\r\n",0
0000a0  0d0a00  
0000a3  00                DCB      0
                  |L5.164|
0000a4  c7ebd1a1          DCB      199,235,209,161,212,241,178,217,215,247,195,252,193,238,":"
0000a8  d4f1b2d9
0000ac  d7f7c3fc
0000b0  c1ee3a  
0000b3  0d0a00            DCB      "\r\n",0
0000b6  00                DCB      0
0000b7  00                DCB      0
                  |L5.184|
0000b8  30202d20          DCB      "0 - ",182,212,"SPI_Flash",189,248,208,208,206,196,188,254
0000bc  b6d45350
0000c0  495f466c
0000c4  617368bd
0000c8  f8d0d0ce
0000cc  c4bcfe  
0000cf  cfb5cdb3          DCB      207,181,205,179,184,241,202,189,187,175,"\r\n",0
0000d3  b8f1cabd
0000d7  bbaf0d0a
0000db  00      
                  |L5.220|
0000dc  31202d20          DCB      "1 - ",207,212,202,190,184,249,196,191,194,188,207,194,181
0000e0  cfd4cabe
0000e4  b8f9c4bf
0000e8  c2bccfc2
0000ec  b5      
0000ed  c4cec4bc          DCB      196,206,196,188,254,193,208,177,237,"\r\n",0
0000f1  fec1d0b1
0000f5  ed0d0a00
0000f9  00                DCB      0
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L5.252|
0000fc  32202d20          DCB      "2 - ",180,180,189,168,210,187,184,246,208,194,206,196,188
000100  b4b4bda8
000104  d2bbb8f6
000108  d0c2cec4
00010c  bc      
00010d  fe61726d          DCB      254,"armfly.txt\r\n",0
000111  666c792e
000115  7478740d
000119  0a00    
00011b  00                DCB      0
                  |L5.284|
00011c  33202d20          DCB      "3 - ",182,193,"armfly.txt",206,196,188,254,181,196,196,218
000120  b6c16172
000124  6d666c79
000128  2e747874
00012c  cec4bcfe
000130  b5c4c4da
000134  c8dd0d0a          DCB      200,221,"\r\n",0
000138  00      
000139  00                DCB      0
00013a  00                DCB      0
00013b  00                DCB      0
                  |L5.316|
00013c  34202d20          DCB      "4 - ",180,180,189,168,196,191,194,188,"\r\n",0
000140  b4b4bda8
000144  c4bfc2bc
000148  0d0a00  
00014b  00                DCB      0
                  |L5.332|
00014c  35202d20          DCB      "5 - ",201,190,179,253,206,196,188,254,186,205,196,191,194
000150  c9beb3fd
000154  cec4bcfe
000158  bacdc4bf
00015c  c2      
00015d  bc0d0a00          DCB      188,"\r\n",0
000161  00                DCB      0
000162  00                DCB      0
000163  00                DCB      0
                  |L5.356|
000164  36202d20          DCB      "6 - ",182,193,208,180,206,196,188,254,203,217,182,200,178
000168  b6c1d0b4
00016c  cec4bcfe
000170  cbd9b6c8
000174  b2      
000175  e2cad40d          DCB      226,202,212,"\r\n",0
000179  0a00    
00017b  00                DCB      0

                          AREA ||i.FileFormat||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  FileFormat PROC
;;;209    */
;;;210    static void FileFormat(void)
000000  b510              PUSH     {r4,lr}
;;;211    {
000002  f5ad7d0e          SUB      sp,sp,#0x238
;;;212    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;213    	FRESULT result;
;;;214    	FATFS fs;
;;;215    
;;;216    	/* 挂载文件系统 */
;;;217    	result = f_mount(&fs, "0:", 0);	
000006  2200              MOVS     r2,#0
000008  a11b              ADR      r1,|L6.120|
00000a  a801              ADD      r0,sp,#4
00000c  f7fffffe          BL       f_mount
000010  4604              MOV      r4,r0
;;;218    	if (result != FR_OK)
000012  b134              CBZ      r4,|L6.34|
;;;219    	{
;;;220    		printf("挂载文件系统失败 (%s)\r\n", FR_Table[result]);
000014  4819              LDR      r0,|L6.124|
000016  f8501024          LDR      r1,[r0,r4,LSL #2]
00001a  a019              ADR      r0,|L6.128|
00001c  f7fffffe          BL       __2printf
000020  e005              B        |L6.46|
                  |L6.34|
;;;221    	}
;;;222    	else
;;;223    	{
;;;224    		printf("挂载文件系统成功 (%s)\r\n", FR_Table[result]);
000022  4816              LDR      r0,|L6.124|
000024  f8501024          LDR      r1,[r0,r4,LSL #2]
000028  a01b              ADR      r0,|L6.152|
00002a  f7fffffe          BL       __2printf
                  |L6.46|
;;;225    	}
;;;226    	
;;;227    	/* 第一次使用必须进行格式化 */
;;;228    	//result = f_mkfs("0:",0,0);
;;;229    	if (result != FR_OK)
00002e  b134              CBZ      r4,|L6.62|
;;;230    	{
;;;231    		printf("格式化失败 (%s)\r\n", FR_Table[result]);
000030  4812              LDR      r0,|L6.124|
000032  f8501024          LDR      r1,[r0,r4,LSL #2]
000036  a01e              ADR      r0,|L6.176|
000038  f7fffffe          BL       __2printf
00003c  e005              B        |L6.74|
                  |L6.62|
;;;232    	}
;;;233    	else
;;;234    	{
;;;235    		printf("格式化成功 (%s)\r\n", FR_Table[result]);
00003e  480f              LDR      r0,|L6.124|
000040  f8501024          LDR      r1,[r0,r4,LSL #2]
000044  a01f              ADR      r0,|L6.196|
000046  f7fffffe          BL       __2printf
                  |L6.74|
;;;236    	}
;;;237    
;;;238    	/* 卸载文件系统 */
;;;239    	result  = f_mount(NULL, "0:", 0);
00004a  2200              MOVS     r2,#0
00004c  a10a              ADR      r1,|L6.120|
00004e  4610              MOV      r0,r2
000050  f7fffffe          BL       f_mount
000054  4604              MOV      r4,r0
;;;240    	if (result != FR_OK)
000056  b134              CBZ      r4,|L6.102|
;;;241    	{
;;;242    		printf("卸载文件系统失败 (%s)\r\n", FR_Table[result]);
000058  4808              LDR      r0,|L6.124|
00005a  f8501024          LDR      r1,[r0,r4,LSL #2]
00005e  a01e              ADR      r0,|L6.216|
000060  f7fffffe          BL       __2printf
000064  e005              B        |L6.114|
                  |L6.102|
;;;243    	}
;;;244    	else
;;;245    	{
;;;246    		printf("卸载文件系统成功 (%s)\r\n", FR_Table[result]);
000066  4805              LDR      r0,|L6.124|
000068  f8501024          LDR      r1,[r0,r4,LSL #2]
00006c  a020              ADR      r0,|L6.240|
00006e  f7fffffe          BL       __2printf
                  |L6.114|
;;;247    	}
;;;248    }
000072  f50d7d0e          ADD      sp,sp,#0x238
000076  bd10              POP      {r4,pc}
;;;249    
                          ENDP

                  |L6.120|
000078  303a00            DCB      "0:",0
00007b  00                DCB      0
                  |L6.124|
                          DCD      FR_Table
                  |L6.128|
000080  b9d2d4d8          DCB      185,210,212,216,206,196,188,254,207,181,205,179,202,167,176
000084  cec4bcfe
000088  cfb5cdb3
00008c  caa7b0  
00008f  dc202825          DCB      220," (%s)\r\n",0
000093  73290d0a
000097  00      
                  |L6.152|
000098  b9d2d4d8          DCB      185,210,212,216,206,196,188,254,207,181,205,179,179,201,185
00009c  cec4bcfe
0000a0  cfb5cdb3
0000a4  b3c9b9  
0000a7  a6202825          DCB      166," (%s)\r\n",0
0000ab  73290d0a
0000af  00      
                  |L6.176|
0000b0  b8f1cabd          DCB      184,241,202,189,187,175,202,167,176,220," (%s)\r\n",0
0000b4  bbafcaa7
0000b8  b0dc2028
0000bc  2573290d
0000c0  0a00    
0000c2  00                DCB      0
0000c3  00                DCB      0
                  |L6.196|
0000c4  b8f1cabd          DCB      184,241,202,189,187,175,179,201,185,166," (%s)\r\n",0
0000c8  bbafb3c9
0000cc  b9a62028
0000d0  2573290d
0000d4  0a00    
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L6.216|
0000d8  d0b6d4d8          DCB      208,182,212,216,206,196,188,254,207,181,205,179,202,167,176
0000dc  cec4bcfe
0000e0  cfb5cdb3
0000e4  caa7b0  
0000e7  dc202825          DCB      220," (%s)\r\n",0
0000eb  73290d0a
0000ef  00      
                  |L6.240|
0000f0  d0b6d4d8          DCB      208,182,212,216,206,196,188,254,207,181,205,179,179,201,185
0000f4  cec4bcfe
0000f8  cfb5cdb3
0000fc  b3c9b9  
0000ff  a6202825          DCB      166," (%s)\r\n",0
000103  73290d0a
000107  00      

                          AREA ||i.ReadFileData||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  ReadFileData PROC
;;;395    */
;;;396    static void ReadFileData(void)
000000  b510              PUSH     {r4,lr}
;;;397    {
000002  f5ad6da2          SUB      sp,sp,#0x510
;;;398    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;399    	FRESULT result;
;;;400    	FATFS fs;
;;;401    	FIL file;
;;;402    	DIR DirInf;
;;;403    	uint32_t bw;
;;;404    	char buf[128];
;;;405    
;;;406     	/* 挂载文件系统 */
;;;407    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000006  2200              MOVS     r2,#0
000008  a122              ADR      r1,|L7.148|
00000a  a8b7              ADD      r0,sp,#0x2dc
00000c  f7fffffe          BL       f_mount
000010  4604              MOV      r4,r0
;;;408    	if (result != FR_OK)
000012  b12c              CBZ      r4,|L7.32|
;;;409    	{
;;;410    		printf("挂载文件系统失败(%s)\r\n",  FR_Table[result]);
000014  4820              LDR      r0,|L7.152|
000016  f8501024          LDR      r1,[r0,r4,LSL #2]
00001a  a020              ADR      r0,|L7.156|
00001c  f7fffffe          BL       __2printf
                  |L7.32|
;;;411    	}
;;;412    
;;;413    	/* 打开根文件夹 */
;;;414    	result = f_opendir(&DirInf, "/"); /* 如果不带参数，则从当前目录开始 */
000020  a124              ADR      r1,|L7.180|
000022  a821              ADD      r0,sp,#0x84
000024  f7fffffe          BL       f_opendir
000028  4604              MOV      r4,r0
;;;415    	if (result != FR_OK)
00002a  b144              CBZ      r4,|L7.62|
;;;416    	{
;;;417    		printf("打开根目录失败(%s)\r\n",  FR_Table[result]);
00002c  481a              LDR      r0,|L7.152|
00002e  f8501024          LDR      r1,[r0,r4,LSL #2]
000032  a021              ADR      r0,|L7.184|
000034  f7fffffe          BL       __2printf
                  |L7.56|
;;;418    		return;
;;;419    	}
;;;420    
;;;421    	/* 打开文件 */
;;;422    	result = f_open(&file, "armfly.txt", FA_OPEN_EXISTING | FA_READ);
;;;423    	if (result !=  FR_OK)
;;;424    	{
;;;425    		printf("Don't Find File : armfly.txt\r\n");
;;;426    		return;
;;;427    	}
;;;428    
;;;429    	/* 读取文件 */
;;;430    	result = f_read(&file, &buf, sizeof(buf) - 1, &bw);
;;;431    	if (bw > 0)
;;;432    	{
;;;433    		buf[bw] = 0;
;;;434    		printf("\r\narmfly.txt 文件内容 : \r\n%s\r\n", buf);
;;;435    	}
;;;436    	else
;;;437    	{
;;;438    		printf("\r\narmfly.txt 文件内容 : \r\n");
;;;439    	}
;;;440    
;;;441    	/* 关闭文件*/
;;;442    	f_close(&file);
;;;443    
;;;444    	/* 卸载文件系统 */
;;;445    	result  = f_mount(NULL, "0:", 0);
;;;446    }
000038  f50d6da2          ADD      sp,sp,#0x510
00003c  bd10              POP      {r4,pc}
                  |L7.62|
00003e  2201              MOVS     r2,#1                 ;422
000040  a123              ADR      r1,|L7.208|
000042  a82d              ADD      r0,sp,#0xb4           ;422
000044  f7fffffe          BL       f_open
000048  4604              MOV      r4,r0                 ;422
00004a  b11c              CBZ      r4,|L7.84|
00004c  a023              ADR      r0,|L7.220|
00004e  f7fffffe          BL       __2printf
000052  e7f1              B        |L7.56|
                  |L7.84|
000054  ab20              ADD      r3,sp,#0x80           ;430
000056  227f              MOVS     r2,#0x7f              ;430
000058  4669              MOV      r1,sp                 ;430
00005a  a82d              ADD      r0,sp,#0xb4           ;430
00005c  f7fffffe          BL       f_read
000060  4604              MOV      r4,r0                 ;430
000062  9820              LDR      r0,[sp,#0x80]         ;431
000064  b140              CBZ      r0,|L7.120|
000066  2000              MOVS     r0,#0                 ;433
000068  9a20              LDR      r2,[sp,#0x80]         ;433
00006a  f80d0002          STRB     r0,[sp,r2]            ;433
00006e  4669              MOV      r1,sp                 ;434
000070  a022              ADR      r0,|L7.252|
000072  f7fffffe          BL       __2printf
000076  e002              B        |L7.126|
                  |L7.120|
000078  a028              ADR      r0,|L7.284|
00007a  f7fffffe          BL       __2printf
                  |L7.126|
00007e  a82d              ADD      r0,sp,#0xb4           ;442
000080  f7fffffe          BL       f_close
000084  2200              MOVS     r2,#0                 ;445
000086  a103              ADR      r1,|L7.148|
000088  4610              MOV      r0,r2                 ;445
00008a  f7fffffe          BL       f_mount
00008e  4604              MOV      r4,r0                 ;445
000090  bf00              NOP      
000092  e7d1              B        |L7.56|
;;;447    
                          ENDP

                  |L7.148|
000094  303a00            DCB      "0:",0
000097  00                DCB      0
                  |L7.152|
                          DCD      FR_Table
                  |L7.156|
00009c  b9d2d4d8          DCB      185,210,212,216,206,196,188,254,207,181,205,179,202,167,176
0000a0  cec4bcfe
0000a4  cfb5cdb3
0000a8  caa7b0  
0000ab  dc282573          DCB      220,"(%s)\r\n",0
0000af  290d0a00
0000b3  00                DCB      0
                  |L7.180|
0000b4  2f00              DCB      "/",0
0000b6  00                DCB      0
0000b7  00                DCB      0
                  |L7.184|
0000b8  b4f2bfaa          DCB      180,242,191,170,184,249,196,191,194,188,202,167,176,220,"("
0000bc  b8f9c4bf
0000c0  c2bccaa7
0000c4  b0dc28  
0000c7  2573290d          DCB      "%s)\r\n",0
0000cb  0a00    
0000cd  00                DCB      0
0000ce  00                DCB      0
0000cf  00                DCB      0
                  |L7.208|
0000d0  61726d66          DCB      "armfly.txt",0
0000d4  6c792e74
0000d8  787400  
0000db  00                DCB      0
                  |L7.220|
0000dc  446f6e27          DCB      "Don't Find File : armfly.txt\r\n",0
0000e0  74204669
0000e4  6e642046
0000e8  696c6520
0000ec  3a206172
0000f0  6d666c79
0000f4  2e747874
0000f8  0d0a00  
0000fb  00                DCB      0
                  |L7.252|
0000fc  0d0a6172          DCB      "\r\narmfly.txt ",206,196,188,254,196,218,200,221," : \r"
000100  6d666c79
000104  2e747874
000108  20cec4bc
00010c  fec4dac8
000110  dd203a20
000114  0d      
000115  0a25730d          DCB      "\n%s\r\n",0
000119  0a00    
00011b  00                DCB      0
                  |L7.284|
00011c  0d0a6172          DCB      "\r\narmfly.txt ",206,196,188,254,196,218,200,221," : \r"
000120  6d666c79
000124  2e747874
000128  20cec4bc
00012c  fec4dac8
000130  dd203a20
000134  0d      
000135  0a00              DCB      "\n",0
000137  00                DCB      0

                          AREA ||i.ViewRootDir||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  ViewRootDir PROC
;;;257    */
;;;258    static void ViewRootDir(void)
000000  b530              PUSH     {r4,r5,lr}
;;;259    {
000002  f5ad7d5f          SUB      sp,sp,#0x37c
;;;260    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;261    	FRESULT result;
;;;262    	FATFS fs;
;;;263    	DIR DirInf;
;;;264    	FILINFO FileInf;
;;;265    	uint32_t cnt = 0;
000006  2500              MOVS     r5,#0
;;;266    	//char fname[256];
;;;267    
;;;268    	/* 挂载文件系统 */
;;;269    	result = f_mount(&fs, "0:", 0);	
000008  2200              MOVS     r2,#0
00000a  a138              ADR      r1,|L8.236|
00000c  a852              ADD      r0,sp,#0x148
00000e  f7fffffe          BL       f_mount
000012  4604              MOV      r4,r0
;;;270    	if (result != FR_OK)
000014  b134              CBZ      r4,|L8.36|
;;;271    	{
;;;272    		printf("挂载文件系统失败 (%s)\r\n", FR_Table[result]);
000016  4836              LDR      r0,|L8.240|
000018  f8501024          LDR      r1,[r0,r4,LSL #2]
00001c  a035              ADR      r0,|L8.244|
00001e  f7fffffe          BL       __2printf
000022  e005              B        |L8.48|
                  |L8.36|
;;;273    	}
;;;274    	else
;;;275    	{
;;;276    		printf("挂载文件系统成功 (%s)\r\n", FR_Table[result]);
000024  4832              LDR      r0,|L8.240|
000026  f8501024          LDR      r1,[r0,r4,LSL #2]
00002a  a038              ADR      r0,|L8.268|
00002c  f7fffffe          BL       __2printf
                  |L8.48|
;;;277    	}
;;;278    	
;;;279    	/* 打开根文件夹 */
;;;280    	result = f_opendir(&DirInf, "0:/"); /* 如果不带参数，则从当前目录开始 */
000030  a13c              ADR      r1,|L8.292|
000032  a846              ADD      r0,sp,#0x118
000034  f7fffffe          BL       f_opendir
000038  4604              MOV      r4,r0
;;;281    	if (result != FR_OK)
00003a  b144              CBZ      r4,|L8.78|
;;;282    	{
;;;283    		printf("打开根目录失败 (%s)\r\n", FR_Table[result]);
00003c  482c              LDR      r0,|L8.240|
00003e  f8501024          LDR      r1,[r0,r4,LSL #2]
000042  a039              ADR      r0,|L8.296|
000044  f7fffffe          BL       __2printf
                  |L8.72|
;;;284    		return;
;;;285    	}
;;;286    
;;;287    	/* 读取当前文件夹下的文件和目录 */
;;;288    	//FileInf.fname = fname;
;;;289    	FileInf.fsize = 256;
;;;290    
;;;291    	printf("属性        |  文件大小 | 短文件名 | 长文件名\r\n");
;;;292    	for (cnt = 0; ;cnt++)
;;;293    	{
;;;294    		result = f_readdir(&DirInf,&FileInf); 		/* 读取目录项，索引会自动下移 */
;;;295    		if (result != FR_OK || FileInf.fname[0] == 0)
;;;296    		{
;;;297    			break;
;;;298    		}
;;;299    
;;;300    		if (FileInf.fname[0] == '.')
;;;301    		{
;;;302    			continue;
;;;303    		}
;;;304    
;;;305    		/* 判断是文件还是子目录 */
;;;306    		if (FileInf.fattrib & AM_DIR)
;;;307    		{
;;;308    			printf("(0x%02d)目录  ", FileInf.fattrib);
;;;309    		}
;;;310    		else
;;;311    		{
;;;312    			printf("(0x%02d)文件  ", FileInf.fattrib);
;;;313    		}
;;;314    
;;;315    		/* 打印文件大小, 最大4G */
;;;316    		printf(" %10d", FileInf.fsize);
;;;317    
;;;318    		printf("  %s |", FileInf.fname);	/* 短文件名 */
;;;319    
;;;320    		printf("  %s\r\n", (char *)FileInf.fname);	/* 长文件名 */
;;;321    	}
;;;322    
;;;323    	/* 卸载文件系统 */
;;;324    	result  = f_mount(NULL, "0:", 0);
;;;325    	if (result != FR_OK)
;;;326    	{
;;;327    		printf("卸载文件系统失败 (%s)\r\n", FR_Table[result]);
;;;328    	}
;;;329    	else
;;;330    	{
;;;331    		printf("卸载文件系统成功 (%s)\r\n", FR_Table[result]);
;;;332    	}
;;;333    }
000048  f50d7d5f          ADD      sp,sp,#0x37c
00004c  bd30              POP      {r4,r5,pc}
                  |L8.78|
00004e  f44f7080          MOV      r0,#0x100             ;289
000052  9000              STR      r0,[sp,#0]            ;289
000054  a03a              ADR      r0,|L8.320|
000056  f7fffffe          BL       __2printf
00005a  2500              MOVS     r5,#0                 ;292
00005c  bf00              NOP                            ;292
                  |L8.94|
00005e  4669              MOV      r1,sp                 ;294
000060  a846              ADD      r0,sp,#0x118          ;294
000062  f7fffffe          BL       f_readdir
000066  4604              MOV      r4,r0                 ;294
000068  b914              CBNZ     r4,|L8.112|
00006a  f89d0016          LDRB     r0,[sp,#0x16]         ;295
00006e  b900              CBNZ     r0,|L8.114|
                  |L8.112|
000070  e025              B        |L8.190|
                  |L8.114|
000072  f89d0016          LDRB     r0,[sp,#0x16]         ;300
000076  282e              CMP      r0,#0x2e              ;300
000078  d100              BNE      |L8.124|
00007a  e01e              B        |L8.186|
                  |L8.124|
00007c  f89d0008          LDRB     r0,[sp,#8]            ;306
000080  f0000010          AND      r0,r0,#0x10           ;306
000084  b128              CBZ      r0,|L8.146|
000086  f89d1008          LDRB     r1,[sp,#8]            ;308
00008a  a039              ADR      r0,|L8.368|
00008c  f7fffffe          BL       __2printf
000090  e004              B        |L8.156|
                  |L8.146|
000092  f89d1008          LDRB     r1,[sp,#8]            ;312
000096  a03a              ADR      r0,|L8.384|
000098  f7fffffe          BL       __2printf
                  |L8.156|
00009c  a03c              ADR      r0,|L8.400|
00009e  9900              LDR      r1,[sp,#0]            ;316
0000a0  f7fffffe          BL       __2printf
0000a4  f10d0116          ADD      r1,sp,#0x16           ;318
0000a8  a03b              ADR      r0,|L8.408|
0000aa  f7fffffe          BL       __2printf
0000ae  f10d0116          ADD      r1,sp,#0x16           ;320
0000b2  a03b              ADR      r0,|L8.416|
0000b4  f7fffffe          BL       __2printf
0000b8  bf00              NOP                            ;302
                  |L8.186|
0000ba  1c6d              ADDS     r5,r5,#1              ;292
0000bc  e7cf              B        |L8.94|
                  |L8.190|
0000be  bf00              NOP                            ;297
0000c0  2200              MOVS     r2,#0                 ;324
0000c2  a10a              ADR      r1,|L8.236|
0000c4  4610              MOV      r0,r2                 ;324
0000c6  f7fffffe          BL       f_mount
0000ca  4604              MOV      r4,r0                 ;324
0000cc  b134              CBZ      r4,|L8.220|
0000ce  4808              LDR      r0,|L8.240|
0000d0  f8501024          LDR      r1,[r0,r4,LSL #2]     ;327
0000d4  a034              ADR      r0,|L8.424|
0000d6  f7fffffe          BL       __2printf
0000da  e005              B        |L8.232|
                  |L8.220|
0000dc  4804              LDR      r0,|L8.240|
0000de  f8501024          LDR      r1,[r0,r4,LSL #2]     ;331
0000e2  a037              ADR      r0,|L8.448|
0000e4  f7fffffe          BL       __2printf
                  |L8.232|
0000e8  bf00              NOP      
0000ea  e7ad              B        |L8.72|
;;;334    
                          ENDP

                  |L8.236|
0000ec  303a00            DCB      "0:",0
0000ef  00                DCB      0
                  |L8.240|
                          DCD      FR_Table
                  |L8.244|
0000f4  b9d2d4d8          DCB      185,210,212,216,206,196,188,254,207,181,205,179,202,167,176
0000f8  cec4bcfe
0000fc  cfb5cdb3
000100  caa7b0  
000103  dc202825          DCB      220," (%s)\r\n",0
000107  73290d0a
00010b  00      
                  |L8.268|
00010c  b9d2d4d8          DCB      185,210,212,216,206,196,188,254,207,181,205,179,179,201,185
000110  cec4bcfe
000114  cfb5cdb3
000118  b3c9b9  
00011b  a6202825          DCB      166," (%s)\r\n",0
00011f  73290d0a
000123  00      
                  |L8.292|
000124  303a2f00          DCB      "0:/",0
                  |L8.296|
000128  b4f2bfaa          DCB      180,242,191,170,184,249,196,191,194,188,202,167,176,220," "
00012c  b8f9c4bf
000130  c2bccaa7
000134  b0dc20  
000137  28257329          DCB      "(%s)\r\n",0
00013b  0d0a00  
00013e  00                DCB      0
00013f  00                DCB      0
                  |L8.320|
000140  caf4d0d4          DCB      202,244,208,212,"        |  ",206,196,188,254,180,243,208
000144  20202020
000148  20202020
00014c  7c2020ce
000150  c4bcfeb4
000154  f3d0    
000156  a1207c20          DCB      161," | ",182,204,206,196,188,254,195,251," | ",179,164,206
00015a  b6cccec4
00015e  bcfec3fb
000162  207c20b3
000166  a4ce    
000168  c4bcfec3          DCB      196,188,254,195,251,"\r\n",0
00016c  fb0d0a00
                  |L8.368|
000170  28307825          DCB      "(0x%02d)",196,191,194,188,"  ",0
000174  30326429
000178  c4bfc2bc
00017c  202000  
00017f  00                DCB      0
                  |L8.384|
000180  28307825          DCB      "(0x%02d)",206,196,188,254,"  ",0
000184  30326429
000188  cec4bcfe
00018c  202000  
00018f  00                DCB      0
                  |L8.400|
000190  20253130          DCB      " %10d",0
000194  6400    
000196  00                DCB      0
000197  00                DCB      0
                  |L8.408|
000198  20202573          DCB      "  %s |",0
00019c  207c00  
00019f  00                DCB      0
                  |L8.416|
0001a0  20202573          DCB      "  %s\r\n",0
0001a4  0d0a00  
0001a7  00                DCB      0
                  |L8.424|
0001a8  d0b6d4d8          DCB      208,182,212,216,206,196,188,254,207,181,205,179,202,167,176
0001ac  cec4bcfe
0001b0  cfb5cdb3
0001b4  caa7b0  
0001b7  dc202825          DCB      220," (%s)\r\n",0
0001bb  73290d0a
0001bf  00      
                  |L8.448|
0001c0  d0b6d4d8          DCB      208,182,212,216,206,196,188,254,207,181,205,179,179,201,185
0001c4  cec4bcfe
0001c8  cfb5cdb3
0001cc  b3c9b9  
0001cf  a6202825          DCB      166," (%s)\r\n",0
0001d3  73290d0a
0001d7  00      

                          AREA ||i.WriteFileTest||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  WriteFileTest PROC
;;;659    */
;;;660    static void WriteFileTest(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;661    {
000004  f2ad4da4          SUB      sp,sp,#0x4a4
;;;662    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;663    	FRESULT result;
;;;664    	FATFS fs;
;;;665    	FIL file;
;;;666    	DIR DirInf;
;;;667    	uint32_t bw;
;;;668    	uint32_t i,k;
;;;669    	uint32_t runtime1,runtime2,timelen;
;;;670    	uint8_t err = 0;
000008  f04f0a00          MOV      r10,#0
;;;671    	char TestFileName[13];
;;;672    	static uint8_t s_ucTestSn = 0;
;;;673    
;;;674    	for (i = 0; i < sizeof(g_TestBuf); i++)
00000c  2400              MOVS     r4,#0
00000e  e005              B        |L9.28|
                  |L9.16|
;;;675    	{
;;;676    		g_TestBuf[i] = (i / 512) + '0';
000010  2030              MOVS     r0,#0x30
000012  eb002054          ADD      r0,r0,r4,LSR #9
000016  496f              LDR      r1,|L9.468|
000018  5508              STRB     r0,[r1,r4]
00001a  1c64              ADDS     r4,r4,#1              ;674
                  |L9.28|
00001c  f5b45f80          CMP      r4,#0x1000            ;674
000020  d3f6              BCC      |L9.16|
;;;677    	}
;;;678    
;;;679      	/* 挂载文件系统 */
;;;680    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000022  2200              MOVS     r2,#0
000024  a16c              ADR      r1,|L9.472|
000026  a89c              ADD      r0,sp,#0x270
000028  f7fffffe          BL       f_mount
00002c  4605              MOV      r5,r0
;;;681    	if (result != FR_OK)
00002e  b12d              CBZ      r5,|L9.60|
;;;682    	{
;;;683    		printf("挂载文件系统失败 (%s)\r\n",  FR_Table[result]);
000030  486a              LDR      r0,|L9.476|
000032  f8501025          LDR      r1,[r0,r5,LSL #2]
000036  a06a              ADR      r0,|L9.480|
000038  f7fffffe          BL       __2printf
                  |L9.60|
;;;684    	}
;;;685    
;;;686    	/* 打开根文件夹 */
;;;687    	result = f_opendir(&DirInf, "/"); /* 如果不带参数，则从当前目录开始 */
00003c  a16e              ADR      r1,|L9.504|
00003e  a806              ADD      r0,sp,#0x18
000040  f7fffffe          BL       f_opendir
000044  4605              MOV      r5,r0
;;;688    	if (result != FR_OK)
000046  b14d              CBZ      r5,|L9.92|
;;;689    	{
;;;690    		printf("打开根目录失败 (%s)\r\n",  FR_Table[result]);
000048  4864              LDR      r0,|L9.476|
00004a  f8501025          LDR      r1,[r0,r5,LSL #2]
00004e  a06b              ADR      r0,|L9.508|
000050  f7fffffe          BL       __2printf
                  |L9.84|
;;;691    		return;
;;;692    	}
;;;693    
;;;694    	/* 打开文件 */
;;;695    	sprintf(TestFileName, "Speed%02d.txt", s_ucTestSn++);		/* 每写1次，序号递增 */
;;;696    	result = f_open(&file, TestFileName, FA_CREATE_ALWAYS | FA_WRITE);
;;;697    
;;;698    	/* 写一串数据 */
;;;699    	printf("开始写文件%s %dKB ...\r\n", TestFileName, TEST_FILE_LEN / 1024);
;;;700    	runtime1 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;701    	for (i = 0; i < TEST_FILE_LEN / BUF_SIZE; i++)
;;;702    	{
;;;703    		result = f_write(&file, g_TestBuf, sizeof(g_TestBuf), &bw);
;;;704    		if (result == FR_OK)
;;;705    		{
;;;706    			if (((i + 1) % 8) == 0)
;;;707    			{
;;;708    				printf(".");
;;;709    			}
;;;710    		}
;;;711    		else
;;;712    		{
;;;713    			err = 1;
;;;714    			printf("%s文件写失败\r\n", TestFileName);
;;;715    			break;
;;;716    		}
;;;717    	}
;;;718    	runtime2 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;719    
;;;720    	if (err == 0)
;;;721    	{
;;;722    		timelen = (runtime2 - runtime1);
;;;723    		printf("\r\n  写耗时 : %dms   平均写速度 : %dB/S (%dKB/S)\r\n",
;;;724    			timelen,
;;;725    			(TEST_FILE_LEN * 1000) / timelen,
;;;726    			((TEST_FILE_LEN / 1024) * 1000) / timelen);
;;;727    	}
;;;728    
;;;729    	f_close(&file);		/* 关闭文件*/
;;;730    
;;;731    
;;;732    	/* 开始读文件测试 */
;;;733    	result = f_open(&file, TestFileName, FA_OPEN_EXISTING | FA_READ);
;;;734    	if (result !=  FR_OK)
;;;735    	{
;;;736    		printf("没有找到文件: %s\r\n", TestFileName);
;;;737    		return;
;;;738    	}
;;;739    
;;;740    	printf("开始读文件 %dKB ...\r\n", TEST_FILE_LEN / 1024);
;;;741    	runtime1 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;742    	for (i = 0; i < TEST_FILE_LEN / BUF_SIZE; i++)
;;;743    	{
;;;744    		result = f_read(&file, g_TestBuf, sizeof(g_TestBuf), &bw);
;;;745    		if (result == FR_OK)
;;;746    		{
;;;747    			if (((i + 1) % 8) == 0)
;;;748    			{
;;;749    				printf(".");
;;;750    			}
;;;751    
;;;752    			/* 比较写入的数据是否正确，此语句会导致读卡速度结果降低到 3.5MBytes/S */
;;;753    			for (k = 0; k < sizeof(g_TestBuf); k++)
;;;754    			{
;;;755    				if (g_TestBuf[k] != (k / 512) + '0')
;;;756    				{
;;;757    				  	err = 1;
;;;758    					printf("Speed1.txt 文件读成功，但是数据出错\r\n");
;;;759    					break;
;;;760    				}
;;;761    			}
;;;762    			if (err == 1)
;;;763    			{
;;;764    				break;
;;;765    			}
;;;766    		}
;;;767    		else
;;;768    		{
;;;769    			err = 1;
;;;770    			printf("Speed1.txt 文件读失败\r\n");
;;;771    			break;
;;;772    		}
;;;773    	}
;;;774    	runtime2 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;775    
;;;776    	if (err == 0)
;;;777    	{
;;;778    		timelen = (runtime2 - runtime1);
;;;779    		printf("\r\n  读耗时 : %dms   平均读速度 : %dB/S (%dKB/S)\r\n", timelen,
;;;780    			(TEST_FILE_LEN * 1000) / timelen, ((TEST_FILE_LEN / 1024) * 1000) / timelen);
;;;781    	}
;;;782    
;;;783    	/* 关闭文件*/
;;;784    	f_close(&file);
;;;785    
;;;786    	/* 卸载文件系统 */
;;;787    	result  = f_mount(NULL, "0:", 0);
;;;788    }
000054  f20d4da4          ADD      sp,sp,#0x4a4
000058  e8bd8ff0          POP      {r4-r11,pc}
                  |L9.92|
00005c  486d              LDR      r0,|L9.532|
00005e  7802              LDRB     r2,[r0,#0]            ;695  ; s_ucTestSn
000060  7800              LDRB     r0,[r0,#0]            ;695  ; s_ucTestSn
000062  1c40              ADDS     r0,r0,#1              ;695
000064  4b6b              LDR      r3,|L9.532|
000066  7018              STRB     r0,[r3,#0]            ;695
000068  a16b              ADR      r1,|L9.536|
00006a  a801              ADD      r0,sp,#4              ;695
00006c  f7fffffe          BL       __2sprintf
000070  220a              MOVS     r2,#0xa               ;696
000072  a901              ADD      r1,sp,#4              ;696
000074  a812              ADD      r0,sp,#0x48           ;696
000076  f7fffffe          BL       f_open
00007a  4605              MOV      r5,r0                 ;696
00007c  f44f6200          MOV      r2,#0x800             ;699
000080  a901              ADD      r1,sp,#4              ;699
000082  a069              ADR      r0,|L9.552|
000084  f7fffffe          BL       __2printf
000088  f7fffffe          BL       bsp_GetRunTime
00008c  4680              MOV      r8,r0                 ;700
00008e  2400              MOVS     r4,#0                 ;701
000090  e018              B        |L9.196|
                  |L9.146|
000092  ab05              ADD      r3,sp,#0x14           ;703
000094  f44f5280          MOV      r2,#0x1000            ;703
000098  494e              LDR      r1,|L9.468|
00009a  a812              ADD      r0,sp,#0x48           ;703
00009c  f7fffffe          BL       f_write
0000a0  4605              MOV      r5,r0                 ;703
0000a2  b93d              CBNZ     r5,|L9.180|
0000a4  1c60              ADDS     r0,r4,#1              ;706
0000a6  f0000007          AND      r0,r0,#7              ;706
0000aa  b950              CBNZ     r0,|L9.194|
0000ac  a064              ADR      r0,|L9.576|
0000ae  f7fffffe          BL       __2printf
0000b2  e006              B        |L9.194|
                  |L9.180|
0000b4  f04f0a01          MOV      r10,#1                ;713
0000b8  a901              ADD      r1,sp,#4              ;714
0000ba  a062              ADR      r0,|L9.580|
0000bc  f7fffffe          BL       __2printf
0000c0  e003              B        |L9.202|
                  |L9.194|
0000c2  1c64              ADDS     r4,r4,#1              ;701
                  |L9.196|
0000c4  f5b47f00          CMP      r4,#0x200             ;701
0000c8  d3e3              BCC      |L9.146|
                  |L9.202|
0000ca  bf00              NOP                            ;715
0000cc  f7fffffe          BL       bsp_GetRunTime
0000d0  4681              MOV      r9,r0                 ;718
0000d2  f1ba0f00          CMP      r10,#0                ;720
0000d6  d10f              BNE      |L9.248|
0000d8  eba90608          SUB      r6,r9,r8              ;722
0000dc  f44f10fa          MOV      r0,#0x1f4000          ;723
0000e0  fbb0fbf6          UDIV     r11,r0,r6             ;723
0000e4  0280              LSLS     r0,r0,#10             ;723
0000e6  fbb0f0f6          UDIV     r0,r0,r6              ;723
0000ea  465b              MOV      r3,r11                ;723
0000ec  4602              MOV      r2,r0                 ;723
0000ee  4631              MOV      r1,r6                 ;723
0000f0  9000              STR      r0,[sp,#0]            ;723
0000f2  a058              ADR      r0,|L9.596|
0000f4  f7fffffe          BL       __2printf
                  |L9.248|
0000f8  a812              ADD      r0,sp,#0x48           ;729
0000fa  f7fffffe          BL       f_close
0000fe  2201              MOVS     r2,#1                 ;733
000100  a901              ADD      r1,sp,#4              ;733
000102  a812              ADD      r0,sp,#0x48           ;733
000104  f7fffffe          BL       f_open
000108  4605              MOV      r5,r0                 ;733
00010a  b125              CBZ      r5,|L9.278|
00010c  a901              ADD      r1,sp,#4              ;736
00010e  a05e              ADR      r0,|L9.648|
000110  f7fffffe          BL       __2printf
000114  e79e              B        |L9.84|
                  |L9.278|
000116  f44f6100          MOV      r1,#0x800             ;740
00011a  a060              ADR      r0,|L9.668|
00011c  f7fffffe          BL       __2printf
000120  f7fffffe          BL       bsp_GetRunTime
000124  4680              MOV      r8,r0                 ;741
000126  2400              MOVS     r4,#0                 ;742
000128  e02e              B        |L9.392|
                  |L9.298|
00012a  ab05              ADD      r3,sp,#0x14           ;744
00012c  f44f5280          MOV      r2,#0x1000            ;744
000130  4928              LDR      r1,|L9.468|
000132  a812              ADD      r0,sp,#0x48           ;744
000134  f7fffffe          BL       f_read
000138  4605              MOV      r5,r0                 ;744
00013a  b9f5              CBNZ     r5,|L9.378|
00013c  1c60              ADDS     r0,r4,#1              ;747
00013e  f0000007          AND      r0,r0,#7              ;747
000142  b910              CBNZ     r0,|L9.330|
000144  a03e              ADR      r0,|L9.576|
000146  f7fffffe          BL       __2printf
                  |L9.330|
00014a  2700              MOVS     r7,#0                 ;753
00014c  e00d              B        |L9.362|
                  |L9.334|
00014e  4821              LDR      r0,|L9.468|
000150  5dc0              LDRB     r0,[r0,r7]            ;755
000152  2130              MOVS     r1,#0x30              ;755
000154  eb012157          ADD      r1,r1,r7,LSR #9       ;755
000158  4288              CMP      r0,r1                 ;755
00015a  d005              BEQ      |L9.360|
00015c  f04f0a01          MOV      r10,#1                ;757
000160  a054              ADR      r0,|L9.692|
000162  f7fffffe          BL       __2printf
000166  e003              B        |L9.368|
                  |L9.360|
000168  1c7f              ADDS     r7,r7,#1              ;753
                  |L9.362|
00016a  f5b75f80          CMP      r7,#0x1000            ;753
00016e  d3ee              BCC      |L9.334|
                  |L9.368|
000170  bf00              NOP                            ;759
000172  f1ba0f01          CMP      r10,#1                ;762
000176  d106              BNE      |L9.390|
000178  e009              B        |L9.398|
                  |L9.378|
00017a  f04f0a01          MOV      r10,#1                ;769
00017e  a057              ADR      r0,|L9.732|
000180  f7fffffe          BL       __2printf
000184  e003              B        |L9.398|
                  |L9.390|
000186  1c64              ADDS     r4,r4,#1              ;742
                  |L9.392|
000188  f5b47f00          CMP      r4,#0x200             ;742
00018c  d3cd              BCC      |L9.298|
                  |L9.398|
00018e  bf00              NOP                            ;764
000190  f7fffffe          BL       bsp_GetRunTime
000194  4681              MOV      r9,r0                 ;774
000196  f1ba0f00          CMP      r10,#0                ;776
00019a  d10f              BNE      |L9.444|
00019c  eba90608          SUB      r6,r9,r8              ;778
0001a0  f44f10fa          MOV      r0,#0x1f4000          ;779
0001a4  fbb0fbf6          UDIV     r11,r0,r6             ;779
0001a8  0280              LSLS     r0,r0,#10             ;779
0001aa  fbb0f0f6          UDIV     r0,r0,r6              ;779
0001ae  465b              MOV      r3,r11                ;779
0001b0  4602              MOV      r2,r0                 ;779
0001b2  4631              MOV      r1,r6                 ;779
0001b4  9000              STR      r0,[sp,#0]            ;779
0001b6  a04f              ADR      r0,|L9.756|
0001b8  f7fffffe          BL       __2printf
                  |L9.444|
0001bc  a812              ADD      r0,sp,#0x48           ;784
0001be  f7fffffe          BL       f_close
0001c2  2200              MOVS     r2,#0                 ;787
0001c4  a104              ADR      r1,|L9.472|
0001c6  4610              MOV      r0,r2                 ;787
0001c8  f7fffffe          BL       f_mount
0001cc  4605              MOV      r5,r0                 ;787
0001ce  bf00              NOP      
0001d0  e740              B        |L9.84|
;;;789    
                          ENDP

0001d2  0000              DCW      0x0000
                  |L9.468|
                          DCD      g_TestBuf
                  |L9.472|
0001d8  303a00            DCB      "0:",0
0001db  00                DCB      0
                  |L9.476|
                          DCD      FR_Table
                  |L9.480|
0001e0  b9d2d4d8          DCB      185,210,212,216,206,196,188,254,207,181,205,179,202,167,176
0001e4  cec4bcfe
0001e8  cfb5cdb3
0001ec  caa7b0  
0001ef  dc202825          DCB      220," (%s)\r\n",0
0001f3  73290d0a
0001f7  00      
                  |L9.504|
0001f8  2f00              DCB      "/",0
0001fa  00                DCB      0
0001fb  00                DCB      0
                  |L9.508|
0001fc  b4f2bfaa          DCB      180,242,191,170,184,249,196,191,194,188,202,167,176,220," "
000200  b8f9c4bf
000204  c2bccaa7
000208  b0dc20  
00020b  28257329          DCB      "(%s)\r\n",0
00020f  0d0a00  
000212  00                DCB      0
000213  00                DCB      0
                  |L9.532|
                          DCD      s_ucTestSn
                  |L9.536|
000218  53706565          DCB      "Speed%02d.txt",0
00021c  64253032
000220  642e7478
000224  7400    
000226  00                DCB      0
000227  00                DCB      0
                  |L9.552|
000228  bfaacabc          DCB      191,170,202,188,208,180,206,196,188,254,"%s %dKB ...\r\n"
00022c  d0b4cec4
000230  bcfe2573
000234  2025644b
000238  42202e2e
00023c  2e0d0a  
00023f  00                DCB      0
                  |L9.576|
000240  2e00              DCB      ".",0
000242  00                DCB      0
000243  00                DCB      0
                  |L9.580|
000244  2573cec4          DCB      "%s",206,196,188,254,208,180,202,167,176,220,"\r\n",0
000248  bcfed0b4
00024c  caa7b0dc
000250  0d0a00  
000253  00                DCB      0
                  |L9.596|
000254  0d0a2020          DCB      "\r\n  ",208,180,186,196,202,177," : %dms   ",198,189,190
000258  d0b4bac4
00025c  cab1203a
000260  2025646d
000264  73202020
000268  c6bdbe  
00026b  f9d0b4cb          DCB      249,208,180,203,217,182,200," : %dB/S (%dKB/S)\r\n",0
00026f  d9b6c820
000273  3a202564
000277  422f5320
00027b  2825644b
00027f  422f5329
000283  0d0a00  
000286  00                DCB      0
000287  00                DCB      0
                  |L9.648|
000288  c3bbd3d0          DCB      195,187,211,208,213,210,181,189,206,196,188,254,": %s\r\n"
00028c  d5d2b5bd
000290  cec4bcfe
000294  3a202573
000298  0d0a    
00029a  00                DCB      0
00029b  00                DCB      0
                  |L9.668|
00029c  bfaacabc          DCB      191,170,202,188,182,193,206,196,188,254," %dKB ...\r\n",0
0002a0  b6c1cec4
0002a4  bcfe2025
0002a8  644b4220
0002ac  2e2e2e0d
0002b0  0a00    
0002b2  00                DCB      0
0002b3  00                DCB      0
                  |L9.692|
0002b4  53706565          DCB      "Speed1.txt ",206,196,188,254,182,193,179,201,185,166,163
0002b8  64312e74
0002bc  787420ce
0002c0  c4bcfeb6
0002c4  c1b3c9b9
0002c8  a6a3    
0002ca  acb5abca          DCB      172,181,171,202,199,202,253,190,221,179,246,180,237,"\r\n"
0002ce  c7cafdbe
0002d2  ddb3f6b4
0002d6  ed0d0a  
0002d9  00                DCB      0
0002da  00                DCB      0
0002db  00                DCB      0
                  |L9.732|
0002dc  53706565          DCB      "Speed1.txt ",206,196,188,254,182,193,202,167,176,220,"\r"
0002e0  64312e74
0002e4  787420ce
0002e8  c4bcfeb6
0002ec  c1caa7b0
0002f0  dc0d    
0002f2  0a00              DCB      "\n",0
                  |L9.756|
0002f4  0d0a2020          DCB      "\r\n  ",182,193,186,196,202,177," : %dms   ",198,189,190
0002f8  b6c1bac4
0002fc  cab1203a
000300  2025646d
000304  73202020
000308  c6bdbe  
00030b  f9b6c1cb          DCB      249,182,193,203,217,182,200," : %dB/S (%dKB/S)\r\n",0
00030f  d9b6c820
000313  3a202564
000317  422f5320
00031b  2825644b
00031f  422f5329
000323  0d0a00  
000326  00                DCB      0
000327  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  g_TestBuf
                          %        4096

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  46525f4f          DCB      "FR_OK",163,186,179,201,185,166,0
000004  4ba3bab3
000008  c9b9a600
00000c  46525f44          DCB      "FR_DISK_ERR",163,186,181,215,178,227,211,178,188,254,180
000010  49534b5f
000014  455252a3
000018  bab5d7b2
00001c  e3d3b2bc
000020  feb4    
000022  edcef300          DCB      237,206,243,0
000026  00                DCB      0
000027  00                DCB      0
000028  46525f49          DCB      "FR_INT_ERR",163,186,182,207,209,212,202,167,176,220,0
00002c  4e545f45
000030  5252a3ba
000034  b6cfd1d4
000038  caa7b0dc
00003c  00      
00003d  00                DCB      0
00003e  00                DCB      0
00003f  00                DCB      0
000040  46525f4e          DCB      "FR_NOT_READY",163,186,206,239,192,237,199,253,182,175,195
000044  4f545f52
000048  45414459
00004c  a3baceef
000050  c0edc7fd
000054  b6afc3  
000057  bbd3d0b9          DCB      187,211,208,185,164,215,247,0
00005b  a4d7f700
00005f  00                DCB      0
000060  46525f4e          DCB      "FR_NO_FILE",163,186,206,196,188,254,178,187,180,230,212
000064  4f5f4649
000068  4c45a3ba
00006c  cec4bcfe
000070  b2bbb4e6
000074  d4      
000075  da00              DCB      218,0
000077  00                DCB      0
000078  46525f4e          DCB      "FR_NO_PATH",163,186,194,183,190,182,178,187,180,230,212
00007c  4f5f5041
000080  5448a3ba
000084  c2b7beb6
000088  b2bbb4e6
00008c  d4      
00008d  da00              DCB      218,0
00008f  00                DCB      0
000090  46525f49          DCB      "FR_INVALID_NAME",163,186,206,222,208,167,206,196,188,254
000094  4e56414c
000098  49445f4e
00009c  414d45a3
0000a0  baceded0
0000a4  a7cec4bc
0000a8  fe      
0000a9  c3fb00            DCB      195,251,0
0000ac  46525f44          DCB      "FR_DENIED",163,186,211,201,211,218,189,251,214,185,183,195
0000b0  454e4945
0000b4  44a3bad3
0000b8  c9d3dabd
0000bc  fbd6b9b7
0000c0  c3      
0000c1  cecabbf2          DCB      206,202,187,242,213,223,196,191,194,188,210,209,194,250,183
0000c5  d5dfc4bf
0000c9  c2bcd2d1
0000cd  c2fab7  
0000d0  c3cecab1          DCB      195,206,202,177,187,190,220,190,248,0
0000d4  bbbedcbe
0000d8  f800    
0000da  00                DCB      0
0000db  00                DCB      0
0000dc  46525f45          DCB      "FR_EXIST",163,186,206,196,188,254,210,209,190,173,180,230
0000e0  58495354
0000e4  a3bacec4
0000e8  bcfed2d1
0000ec  beadb4e6
0000f0  d4da00            DCB      212,218,0
0000f3  00                DCB      0
0000f4  46525f49          DCB      "FR_INVALID_OBJECT",163,186,206,196,188,254,187,242,213,223
0000f8  4e56414c
0000fc  49445f4f
000100  424a4543
000104  54a3bace
000108  c4bcfebb
00010c  f2d5df  
00010f  c4bfc2bc          DCB      196,191,194,188,182,212,207,243,206,222,208,167,0
000113  b6d4cff3
000117  ceded0a7
00011b  00      
00011c  46525f57          DCB      "FR_WRITE_PROTECTED",163,186,206,239,192,237,199,253,182
000120  52495445
000124  5f50524f
000128  54454354
00012c  4544a3ba
000130  ceefc0ed
000134  c7fdb6  
000137  afb1bbd0          DCB      175,177,187,208,180,177,163,187,164,0
00013b  b4b1a3bb
00013f  a400    
000141  00                DCB      0
000142  00                DCB      0
000143  00                DCB      0
000144  46525f49          DCB      "FR_INVALID_DRIVE",163,186,194,223,188,173,199,253,182,175
000148  4e56414c
00014c  49445f44
000150  52495645
000154  a3bac2df
000158  bcadc7fd
00015c  b6af    
00015e  bac5cede          DCB      186,197,206,222,208,167,0
000162  d0a700  
000165  00                DCB      0
000166  00                DCB      0
000167  00                DCB      0
000168  46525f4e          DCB      "FR_NOT_ENABLED",163,186,190,237,214,208,206,222,185,164
00016c  4f545f45
000170  4e41424c
000174  4544a3ba
000178  beedd6d0
00017c  cedeb9a4
000180  d7f7c7f8          DCB      215,247,199,248,0
000184  00      
000185  00                DCB      0
000186  00                DCB      0
000187  00                DCB      0
000188  46525f4e          DCB      "FR_NO_FILESYSTEM",163,186,195,187,211,208,211,208,208,167
00018c  4f5f4649
000190  4c455359
000194  5354454d
000198  a3bac3bb
00019c  d3d0d3d0
0001a0  d0a7    
0001a2  b5c44641          DCB      181,196,"FAT",190,237,0
0001a6  54beed00
0001aa  00                DCB      0
0001ab  00                DCB      0
0001ac  46525f4d          DCB      "FR_MKFS_ABORTED",163,186,211,201,211,218,178,206,202,253
0001b0  4b46535f
0001b4  41424f52
0001b8  544544a3
0001bc  bad3c9d3
0001c0  dab2ceca
0001c4  fd      
0001c5  b4edcef3          DCB      180,237,206,243,"f_mkfs()",177,187,214,213,214,185,0
0001c9  665f6d6b
0001cd  66732829
0001d1  b1bbd6d5
0001d5  d6b900  
0001d8  46525f54          DCB      "FR_TIMEOUT",163,186,212,218,185,230,182,168,181,196,202
0001dc  494d454f
0001e0  5554a3ba
0001e4  d4dab9e6
0001e8  b6a8b5c4
0001ec  ca      
0001ed  b1bce4c4          DCB      177,188,228,196,218,206,222,183,168,187,241,181,195,183,195
0001f1  dacedeb7
0001f5  a8bbf1b5
0001f9  c3b7c3  
0001fc  cecabeed          DCB      206,202,190,237,181,196,208,237,191,201,0
000200  b5c4d0ed
000204  bfc900  
000207  00                DCB      0
000208  46525f4c          DCB      "FR_LOCKED",163,186,211,201,211,218,206,196,188,254,185,178
00020c  4f434b45
000210  44a3bad3
000214  c9d3dace
000218  c4bcfeb9
00021c  b2      
00021d  cfedb2df          DCB      207,237,178,223,194,212,178,217,215,247,177,187,190,220,190
000221  c2d4b2d9
000225  d7f7b1bb
000229  bedcbe  
00022c  f800              DCB      248,0
00022e  00                DCB      0
00022f  00                DCB      0
000230  46525f4e          DCB      "FR_NOT_ENOUGH_CORE",163,186,206,222,183,168,183,214,197
000234  4f545f45
000238  4e4f5547
00023c  485f434f
000240  5245a3ba
000244  cedeb7a8
000248  b7d6c5  
00024b  e4b3a4ce          DCB      228,179,164,206,196,188,254,195,251,185,164,215,247,199,248
00024f  c4bcfec3
000253  fbb9a4d7
000257  f7c7f8  
00025a  00                DCB      0
00025b  00                DCB      0
00025c  46525f54          DCB      "FR_TOO_MANY_OPEN_FILES",163,186,181,177,199,176,180,242
000260  4f4f5f4d
000264  414e595f
000268  4f50454e
00026c  5f46494c
000270  4553a3ba
000274  b5b1c7b0
000278  b4f2    
00027a  bfaab5c4          DCB      191,170,181,196,206,196,188,254,202,253,180,243,211,218,"_"
00027e  cec4bcfe
000282  cafdb4f3
000286  d3da5f  
000289  46535f53          DCB      "FS_SHARE",0
00028d  48415245
000291  00      
000292  00                DCB      0
000293  00                DCB      0
000294  46525f49          DCB      "FR_INVALID_PARAMETER",163,186,178,206,202,253,206,222,208
000298  4e56414c
00029c  49445f50
0002a0  4152414d
0002a4  45544552
0002a8  a3bab2ce
0002ac  cafdcede
0002b0  d0      
0002b1  a700              DCB      167,0

                          AREA ||.data||, DATA, ALIGN=2

                  FR_Table
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0xc
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x40
                          DCD      ||.conststring||+0x60
                          DCD      ||.conststring||+0x78
                          DCD      ||.conststring||+0x90
                          DCD      ||.conststring||+0xac
                          DCD      ||.conststring||+0xdc
                          DCD      ||.conststring||+0xf4
                          DCD      ||.conststring||+0x11c
                          DCD      ||.conststring||+0x144
                          DCD      ||.conststring||+0x168
                          DCD      ||.conststring||+0x188
                          DCD      ||.conststring||+0x1ac
                          DCD      ||.conststring||+0x1d8
                          DCD      ||.conststring||+0x208
                          DCD      ||.conststring||+0x230
                          DCD      ||.conststring||+0x25c
                          DCD      ||.conststring||+0x294
                  s_ucTestSn
000050  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\User\\spi_flash_fatfs.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_spi_flash_fatfs_c_bd2f6d1e____REV16|
#line 388 "..\\Libraries\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___17_spi_flash_fatfs_c_bd2f6d1e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_spi_flash_fatfs_c_bd2f6d1e____REVSH|
#line 402
|__asm___17_spi_flash_fatfs_c_bd2f6d1e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___17_spi_flash_fatfs_c_bd2f6d1e____RRX|
#line 587
|__asm___17_spi_flash_fatfs_c_bd2f6d1e____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
